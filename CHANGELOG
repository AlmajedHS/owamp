2006-12-05  boote  <boote@foo.local>

	* conf/owampd.conf, doc/Makefile.am, doc/draft-shalunov-reordering-definition-01.txt, doc/owampd.conf.man, doc/owfetch.man, doc/owping.man, doc/owstats.man, doc/owup.man, doc/powstream.man, owamp/api.c, owamp/capi.c, owamp/endpoint.c, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, owamp/sapi.c, owamp/time.c, owampd/owampd.c, owampd/owampdP.h, owping/owping.c, owping/owpingP.h, powstream/powstream.c, powstream/powstreamP.h:
	Features:
	-Added 'enddelay' parameter to allow for a configurable delay before
	sending the stop-sessions message.
	-Added the OWAMP_DEBUG_OFFSET env var to make owamp timestamp functions
	offset by the specified amount. Makes debugging issues from offset
	clocks more easy to do.

	Documentation:
	-Added powstream.man documentation.
	-Lots of spelling fixes in the man pages.
	-Documented enddelay in man pages.

2006-11-21  boote  <boote@foo.local>

	* owamp/endpoint.c:
	change recv loop to initialize properly for offset clocks.

	* owamp/api.c, owamp/time.c, doc/owampd.man, doc/owping.man:
	Added OWAMP_DEBUG_TIMEOFFSET option

	Fixed stopsessions message handling to report error for bad
	next_seqno.

2006-11-15  boote  <boote@foo.local>

	* I2util/config/c-attribute.m4, I2util/config/c-syslog-names.m4, I2util/config/c-syslog-perror.m4, I2util/config/randomdev.m4:
	fix autoconf junk.

	updated time offset portions of bwctl to work better with offset clocks.

	jeff

2006-11-08  boote  <boote@foo.local>

	* owamp/capi.c, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, owamp/stats.c, owping/owping.c, test/owtvec.c:
	solaris port: int types, header file reordering

	* owamp/endpoint.c:
	fix bug triggered by severly offset clocks: setitimer() called with negative value

	* I2util/I2util/sha1.c, I2util/I2util/sha1P.h, I2util/I2util/util.h:
	solaris port: int types, header file reordering

	* conf/owampd.conf, owamp/api.c, owamp/capi.c, owamp/io.c, owamp/owampP.h, owamp/protocol.c, owamp/sapi.c:
	owampd.conf:
	    document default port (861)

	*.c:
	    Fixed a bug in the I/O. When I added the 'retn_on_intr' variable to the
	    I/O functions, I forgot to go back and add it into the client side
	    functions. (This caused the owping client to refuse to die from
	    a cntrl-C in some cases.)

2006-11-07  boote  <boote@foo.local>

	* owamp/protocol.c: Using more standard EACCES errno instead of EAUTH.

	* I2util/doc/Makefile.am, I2util/doc/pfstore.man, I2util/pfstore/pfstore.c, I2util/test/hmac-sha1test.c, I2util/test/pbkdf2test.c, conf/owampd.conf, doc/Makefile.am, doc/index.html, doc/owampd.conf.man, doc/owampd.keys.man, doc/owampd.limits.man, doc/owampd.man, doc/owampd.pfs.man, doc/owfetch.man, doc/owping.man, doc/owup.man, owamp/api.c, owamp/capi.c, owamp/context.c, owamp/endpoint.c, owamp/io.c, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, owamp/rijndael-api-fst.c, owamp/rijndael-api-fst.h, owamp/sapi.c, owamp/schedule.c, owamp/time.c, owampd/owampd.c, owampd/owampdP.h, owampd/policy.c, owampd/policy.h, owping/owping.c, owping/owpingP.h, powstream/powstream.c, powstream/powstreamP.h, test/owtvec.c, CHANGELOG, I2util/I2util/addr.c, I2util/I2util/conf.c, I2util/I2util/conf.h, I2util/I2util/hex.c, I2util/I2util/hex.h, I2util/I2util/pbkdf2.c, I2util/I2util/pbkdf2.h, I2util/aespasswd/aespasswd.c, NOTES, configure.ac:
	Merging RFC version into HEAD.

	* CHANGELOG, NOTES: Updating CHANGELOG for upcoming release.

	Adding implementation notes on crypto functions used in implementation.

	jeff

	* I2util/test/hmac-sha1test.c, I2util/test/pbkdf2test.c:
	Fixing comments to refer to correct files and references.

	jeff

2006-11-06  boote  <boote@foo.local>

	* doc/Makefile.am, doc/index.html, doc/owampd.conf.man, doc/owampd.keys.man, doc/owampd.limits.man, doc/owampd.man, doc/owampd.pfs.man, doc/owfetch.man, doc/owping.man, doc/owup.man:
	Modified owamp documentation for RFC version.

	jeff

	* doc/owampd.pfs.man: New file.

	* configure.ac: Changing 'version' string for 3.0 release.

	* I2util/doc/Makefile.am, I2util/doc/pfstore.man:
	Adding man page for pfstore(1).

	* I2util/doc/pfstore.man: New file.

2006-11-04  boote  <boote@foo.local>

	* owamp/capi.c, owamp/endpoint.c, owamp/owampP.h:
	Test protocol now updated to RFC. It has not been heavily tested yet, but I believe the implementation
	is now RFC compliant. (Expect an alpha release by monday - I plan on working on documentation and
	releaes management stuff sunday.)

	jeff

2006-11-02  boote  <boote@foo.local>

	* owampd/policy.c: Remove temporary print statement.

	* I2util/aespasswd/aespasswd.c, I2util/pfstore/pfstore.c, owamp/capi.c, owamp/endpoint.c, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, owamp/time.c, owampd/policy.c, test/owtvec.c, I2util/I2util/conf.c, I2util/I2util/conf.h, I2util/I2util/hex.c, I2util/I2util/hex.h:
	Moving many things back to uint8_t*. (bit shifts on signed variables breaks
	lots of things.) So, now I have to be more careful with the type punning
	since only (char *) is explicitely allowed by the C99 standard. Ugh.

	* owampd/policy.c, owping/owping.c, powstream/powstream.c, test/owtvec.c:
	More uint8_t* to char* changes.

	* owamp/api.c, owamp/capi.c, owamp/endpoint.c, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, owamp/schedule.c, owamp/time.c:
	Changing several (uint8_t  *) variables to (char *) to allow for type punning.

	* I2util/I2util/conf.c, I2util/I2util/conf.h, I2util/I2util/hex.c, I2util/I2util/hex.h, I2util/aespasswd/aespasswd.c, I2util/pfstore/pfstore.c:
	Modifying several variables from uint8_t * to char * to minimize type punning
	issues.

	jeff

2006-11-01  boote  <boote@foo.local>

	* owamp/api.c, owamp/capi.c, owamp/io.c, owamp/owampP.h, owamp/protocol.c, owamp/sapi.c:
	Control protocol portion of implementation is now compliant with the RFC.

	I will change the test packet format tomorrow.

	* NOTES: Adding some implementation notes.

	* NOTES: New file.

2006-10-30  boote  <boote@foo.local>

	* owamp/capi.c, owamp/io.c, owamp/owampP.h:
	Corrected authentication/encryption identity check code.
	(sizeof operator only sees size of the pointer, not the size of
	the array inside a function.)

2006-10-29  boote  <boote@foo.local>

	* owamp/sapi.c, owampd/owampd.c:
	Corrected error message for permission denied when binding a socket
	to a port <1024.

	* owping/owping.c:
	Correcting usage message for 'pass-phrase' file option.

	* powstream/powstream.c, powstream/powstreamP.h:
	Now uses passphrase instead of key.

	jeff

	* owping/owping.c, owping/owpingP.h: -k option for passphrase file.

	* doc/owping.man: Keeping -k as option for passphrase file.

	* conf/owampd.conf, owampd/owampd.c:
	Adding pbkdf2_count option to config file.

	* I2util/I2util/addr.c:
	Add 'passive' flag if 'wildcard' function is used to create the addr.

	jeff

2006-10-28  boote  <boote@foo.local>

	* owping/owpingP.h, doc/owping.man, owamp/capi.c, owamp/context.c, owamp/io.c, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, owamp/rijndael-api-fst.c, owamp/rijndael-api-fst.h, owamp/sapi.c, owampd/owampd.c, owampd/owampdP.h, owampd/policy.c, owampd/policy.h, owping/owping.c:
	Modified protocol through setup phase to use derived-key and hmac
	functions. (powstream not modified yet)

	* I2util/I2util/conf.c, I2util/I2util/pbkdf2.c, I2util/I2util/pbkdf2.h:
	Added 'const' to some func args - and modified parsing functions.

	jeff

2006-10-24  boote  <boote@foo.local>

	* I2util/test/pbkdf2test.c, owamp/api.c, owamp/io.c, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, owamp/sapi.c:
	check-point commit of work on RFC branch.

	So far:
	Have modified the protocol.c functions to deal with the new server
	greeting protocol, but have not yet updated the other portions of
	the code to use the extra information yet. (hmac is not used yet)

	Removed illegal type punning from protocol.c.

	Also added another test to pbkdf2test.c - I wanted to see how long it
	would take for the pbkdf2 function for various values of count. I plan
	to make the 'count' be a server configuration value. I intend to make
	the 'default' value be 2048 based on how long the algorithm takes on
	my laptop. (roughly 10 msec's for a fairly long pw and salt.)

	jeff

2006-10-20  boote  <boote@foo.local>

	* I2util/I2util/conf.c, I2util/I2util/conf.h, I2util/I2util/hex.c, I2util/I2util/hex.h, I2util/I2util/readpassphrase.c, I2util/I2util/readpassphrase.h, I2util/Makefile.am, I2util/configure.ac, I2util/pfstore/Makefile.am, I2util/pfstore/pfstore.c, I2util/test/Makefile.am:
	Adding a utility program for managing a pass-phrase store.

	The store is not encrypted in any way, although the passphrases are saved
	in hex. (This is primarily to make it easier for parsing, and dealing with
	possible different character sets - if you can enter the bytes at a
	prompt somehow, this will be able to save it.)

	jeff

2006-10-17  boote  <boote@foo.local>

	* I2util/I2util/pbkdf2.c: Better comment.

	jeff

	* I2util/I2util/pbkdf2.c:
	Revert most of pbkdf2 code back to previous version - and fix the single index
	that was off. (It was only the 'index' of the last incomplete block
	that was wrong before - there was no reason to switch to base-1 array
	indexing to fix it.)

	* I2util/test/pbkdf2test.c:
	Adding pbkdf2 test appliation for RFC 3962 test vectors.

	jeff

	* I2util/I2util/pbkdf2.c:
	Fixed a bug in the pbkdf2() impl. Did not work correctly if the
	derived key length was shorter than the prf-hlen.

	jeff

2006-10-14  boote  <boote@foo.local>

	* I2util/I2util/Makefile.am, I2util/I2util/pbkdf2.c, I2util/I2util/pbkdf2.h, I2util/test/Makefile.am, I2util/test/pbkdf2test.c:
	Adding a pbkdf2 function (and test driver application).

	I have not been able to find test vectors for this function, so I don't
	have huge confidence that I wrote it completely correct yet. (I wrote
	it right from the RFC so I would not have to deal with licensing junk.)

	jeff

2006-10-12  boote  <boote@foo.local>

	* I2util/I2util/sha1P.h: Forgot to add sha1P.h...

2006-10-11  boote  <boote@foo.local>

	* I2util/test/hmac-sha1test.c: add program to run test vectors.

	jeff

2006-10-10  boote  <boote@foo.local>

	* I2util/I2util/Makefile.am, I2util/I2util/hmac-sha1.c, I2util/I2util/hmac-sha1.h, I2util/I2util/sha1.c, I2util/I2util/sha1.h, I2util/test/Makefile.am:
	hmac-sha1 implementation and test vectors.

	jeff

2006-10-06  boote  <boote@foo.local>

	* owamp/endpoint.c:
	fix typo in detection of truncated cmd message from recvmsg().

2006-10-03  boote  <boote@foo.local>

	* I2util/I2util/sha1.c, I2util/I2util/sha1.h, I2util/test/sha1test.c:
	Just adding remaining test vectors into sha1 test application.

	jeff

2006-09-30  boote  <boote@foo.local>

	* I2util/I2util/Makefile.am, I2util/I2util/sha1.c, I2util/I2util/sha1.h, I2util/Makefile.am, I2util/configure.ac, I2util/test/Makefile.am, I2util/test/sha1test.c:
	Adding an sha1 implementation and compliance test to I2util.

	jeff

2006-09-16  boote  <boote@foo.local>

	* owamp/protocol.c, owampd/policy.h:
	comment changes - and unify a type.

	* I2util/I2util/addr.c, I2util/I2util/saddr.c, I2util/I2util/saddr.h:
	Remove non-union type punning.

2006-09-13  boote  <boote@foo.local>

	* I2util/I2util/Makefile.am, I2util/I2util/Options.c, I2util/I2util/addr.c, I2util/I2util/options.h, I2util/I2util/optionsP.h, I2util/I2util/saddr.c, I2util/I2util/util.h:
	Removing 'options' stuff. getopt is easier...

	Added comments for areas of possible type punning problems.

	jeff

2006-09-12  boote  <boote@foo.local>

	* I2util/I2util/ErrLogImmediate.c, I2util/I2util/addr.c, I2util/I2util/errlog.h:
	Merge jslawins branch into HEAD. (with some minor cleanup due to conflicts.)

	jeff

2006-08-04  boote  <boote@foo.local>

	* owamp/time.c:
	going back to using esterror instead of maxerror from NTP. maxerror is just TOO conservative.

	jeff

2006-07-25  boote  <boote@foo.local>

	* I2util/I2util/util.h, configure.ac, owamp/owamp.h, owamp/stats.c:
	Updating Boolean type to be intptr_t so get/set funcitions work better.

	jeff

	* I2util/I2util/addr.c, owamp/endpoint.c: addr.c:
	    Modifed the 64-bit byte swapping code so it does not violate
	    the strict alias rules for gcc's optimizing compiler.
	    (Now, instead of casting a uint8_t * into the uint64_t I do
	    a memcpy and set the memory back into the uint64_t. How is that
	    for un-optimizing...)

	endpoint.c:
	    Corrected a bug in the tempfile creation. (Failed permissions were
	    not being detected correctly.)

	jeff

2006-07-02  jeremian  <jeremian@foo.local>

	* I2util/I2util/addr.c: Fixed small bug in the I2AddrSockLen.

2006-06-21  jeremian  <jeremian@foo.local>

	* I2util/I2util/addr.c: Small fix in the preprocessor directives.

2006-06-19  boote  <boote@foo.local>

	* I2util/I2util/saddr.c:
	Using -j to update saddr.c - perhaps that will make it easier for
	jslawins to back-merge...

	jeff

	* I2util/I2util/addr.c:
	Accepting I2SockAddrLen() from jslawins branch into head.

	jeff

	* I2util/I2util/saddr.c: pulling jslawins fix into head. (thanks)

	jeff

2006-06-18  jeremian  <jeremian@foo.local>

	* I2util/I2util/ErrLogImmediate.c, I2util/I2util/errlog.h:
	Added the possibility to log immediately without the new line.

2006-06-17  jeremian  <jeremian@foo.local>

	* I2util/I2util/addr.c: Added the implementation of the I2AddrSockLen.

	* I2util/I2util/saddr.c: Fixed the bug in I2SockAddrIsLoopback.

2006-06-08  boote  <boote@foo.local>

	* I2util/I2util/saddr.c: typo.

2006-06-07  boote  <boote@foo.local>

	* I2util/I2util/saddr.c:
	Incorporate patch from (jeremia@poczta.fm to fix I2SockAddrEqual).

	jeff

2006-05-25  boote  <boote@foo.local>

	* doc/owfetch.man, doc/owstats.man:
	These reference the reordering url too.

	* doc/owping.man: Changing to make reordering url work.

2006-05-24  boote  <boote@foo.local>

	* CHANGELOG: New changes for OWAMP_2_0c release.

	jeff

	* owamp/endpoint.c:
	Initialize timestamp structure for missing-packet record.

	jeff

2006-05-23  boote  <boote@foo.local>

	* configure.ac: prepare 2.0c release.

	jeff

	* owamp/endpoint.c: BUGFIX!
	    Problem: The receiver process over-writes the recv timestamp variable when
	    outputting lost packet records. (The order of things changed in a
	    previous release - it used to be ok to share this variable.)

	    Solution: Add a temporary variable for the lost timestamp.

	    Impact: If you have one lost packet, your data will show a lost packet
	    roughly every 'timeout' seconds after that.

	jeff

	* doc/index.html: preparing for 2.0c release.

	jeff

2006-05-11  boote  <boote@foo.local>

	* doc/Makefile.am: Adding owup.man into man1 targets.

	jeff

	* owping/owping.c: Adding usage message for owup.

	jeff

	* doc/index.html: Adding section on version compatibility.

	jeff

	* doc/owup.man: Adding documentation for owup.

	jeff

2006-04-18  boote  <boote@foo.local>

	* CHANGELOG: changelog for 2.0b release.

	jeff

2006-04-09  boote  <boote@foo.local>

	* doc/index.html: Prepare for 2.0b release. (ITEC only release)

	* configure.ac: Prepare for 2.0b release. (ITEC only release)

	jeff

	* owamp/endpoint.c, owamp/owamp.h, owping/owping.c, powstream/powstream.c:
	Added setsid() code back in. Realized the problem I was having before was
	unrelated - so I was able to add this back in.

	Now powstream and owping now catch ^C and attempt to save partial session
	information. A second ^C should completely terminate.

	jeff

2006-04-07  boote  <boote@foo.local>

	* owamp/api.c, owamp/endpoint.c, owamp/io.c, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, owamp/stats.c, owampd/owampd.c, owampd/policy.c, owping/owping.c, powstream/powstream.c:
	Removed DetachProcess context option I added last week.

	The sub-processes now ignore SIGTERM/SIGHUP correctly. The parent
	process initiates graceful shutdown from SIGTERM/HUP and immediate
	kill from SIGINT. (SIGINT gets sent to the whole process group and
	immediately terminates all children processes as well.) For TERM/HUP
	the parent process attempts to trade StopSession messages and
	do data validation cleanup before exiting. (The parent process
	sends USR2 to sub-processes to notify them of the early exit
	time.)

	This also works for owping. (Note however, that a ^C will send a
	SIGINT on most systems, so this is not the way to get partial results.

	(I could catch SIGINT in the parent processes, and for the first
	one attempt to do a graceful shutdown, and for the second one do
	a SIGKILL for the child processes... But, that would require
	a fair amount of code rework.)

	api.c:
	    Added data cleanup routines. These get called in place of the
	    ReadStopSessions functions if the control connection is closed.
	    Basically, this removes any  missing packet records after the
	    last real received one - but shares some functionality with
	    the routines that are based on the 'stoptime' and 'next_seqno'
	    version used by the ReadStopSessions functions.

	endpoint.c:
	    Now ignore TERM/HUP.

	io.c:
	    Remove error message printout in low-level read function. Higher
	    levels deal with the error and report it if needed.

	owamp.h:
	    Remove DetachProcesses context stuff.

	protocol.c:
	    Moved much of the code from the ReadStopSessions function into
	    utility routines in api.c so they could be shared.

	owampd.c:
	    Handle SIGTERM/HUP more gracefully. Current sessions are now
	    sent the StopSessions message and partial sessions are saved.

	policy.c:
	    If StopSessions DOES happen and the AcceptValue is not ACCEPT,
	    then delete the data file. It is invalid data. (This is how
	    the data cleaning functions notify the other portions of the
	    code.)

	owping.c:
	    Add sig handlers and pay attention to the StopSessions return
	    values to determine if partial sessions should be kept or not.

	powstream.c:
	    Pay attention to the AcceptValue return and delete invalid
	    partial sessions.

	jeff

2006-03-30  boote  <boote@foo.local>

	* owamp/endpoint.c, owamp/owamp.h, owamp/protocol.c, powstream/powstream.c, powstream/powstreamP.h:
	Modified signal handling with regard to early termination of tests
	to be more resiliant in powstream. (There were problems if the
	sessions contained too many LostPacket records - and other
	things were fixed to make signal handling more predictable.)

	endpoint.c:
	    Added an option to make the test processes call setsid. (This
	    ensures that if powstream is sent a SIGINT from another process
	    it behaves the same way as if the user types ^C on the command-line.

	owamp.h:
	    Added context variable for DetachProcesses option.

	protocol.c:
	    Modified the data cleansing algorithm to compute the received
	    time of the packet from the presumed send time in the case of
	    lost packet records. (It needs to know the recv time to know
	    how far it is in the recv stream - the packets are sorted
	    by recv time.) It does this to avoid multiple passes
	    through the data when deciding what records to keep an what
	    records to throw away.

	    Also, the data validation was not using the next_seqno from the
	    stop_sessions packet like it should have. (The statistics
	    code did - but it is better to add it here.)

	    Currently the data cleaning code is embeded in the ReadStopSessions
	    message code. The next step is to extract it from there and generalize
	    it some so it can be called in the case where StopSessions messages
	    are not passed. (In that case, data is just thrown out at the moment.)

	powstream.c
	    Added a delayStart option. Modified it to set the DetachProcesses
	    option. Modified it to call StopSessions when abandoning a test
	    instead of just closing the connection allowing the library
	    to do a nicer job of cleaning up. Added a debug child option.

	(Just checking in what I have before going off-line completely for a few days.)

	jeff

2006-03-25  boote  <boote@foo.local>

	* owamp/stats.c: Adding cast so loss percent is calculated correctly.

	(Ok, ok Eric. You were right, I should have held off longer before making another public
	release.)

	jeff

2006-03-23  boote  <boote@foo.local>

	* owampd/owampd.c, owping/owping.c: owampd.c
	    The 'starttime' variable was not being initialized if the
	    process was detaching from the terminial. Moved the initialization
	    outside that block of code.

	owping.c
	    Removed non ISO strftime format options. Using older, more available
	    versions instead.

	jeff

	* RELEASE.TODO:
	Adding a list of things to be done for each release to help me
	remember.

	jeff

	* CHANGELOG: new change log for 2.0a

	jeff

	* configure.ac, doc/index.html: preparing for 2.0a release
	    fix statistics bugs...

	* configure.ac, owamp/stats.c, powstream/powstream.c: configure.ac:
	    Removed dependence on ieeefp.h functions. (finite) It doesn't
	    work enough places to make it worth using.

	owamp/stats.c powstream/*:
	    Fixed a border case where the last packet in a sub-session
	    was lost. (I had a >, where I needed a >= to make the end
	    of the session detection correctly. This was not being done
	    correctly if the last packet in the sub-session was lost.)

	    Modified the MAX/MIN detection to stop using 'finite' and
	    use a different method to determine if MAX/MIN were valid.

	jeff

	* owamp/stats.c, owping/Makefile.am, owping/owping.c: stats.c:
	    Fixed bug where maxdelay is reported as maxerr.

	owping/*:
	    Added owup command-line utility. Reports the 'start time' of a server.

	jeff

2006-03-15  boote  <boote@foo.local>

	* CHANGELOG: Updating changelog for 2.0 release.

	jeff

	* doc/index.html: Adding supported systems to the documentation.

	jeff

	* owamp/owamp.h:
	mod for 4.X version FreeBSD... (This one is trivial - if there are difficult
	mods later, I will just remove 4.X from the supported systems list. It
	is dated now...)

	jeff

	* owamp/stats.c:
	Accidentily used unsigned constants to init signed values - -1 is not a very
	big number...

	jeff

	* configure.ac, owamp/owamp.h:
	Adding autoconf magic to create PRIu64 and PRIuPTR if they do not
	exist. (Needed for old solaris...)

	jeff

	* owamp/owamp.h:
	Fix for Solaris 8 (since it does not define inttypes.h format macros...).

	jeff

	* owamp/arithm64.c, owamp/context.c, owamp/error.c, owamp/protocol.c, owamp/rijndael-alg-fst.c, owamp/rijndael-alg-fst.h, owamp/rijndael-api-fst.c, owamp/rijndael-api-fst.h, owamp/rijndael-test-fst.c, owamp/schedule.c, owamp/stats.c, owamp/time.c, owampd/fts.c, owampd/owampd.c, owampd/policy.c, owping/owping.c, powstream/powstream.c:
	Corrected header-file inclusion order for the rest of the package.

	jeff

	* I2util/I2util/ErrLog.c, I2util/I2util/ErrLogImmediate.c, I2util/I2util/ErrLogSyslog.c, I2util/I2util/Options.c, I2util/I2util/addr.c, I2util/I2util/addr.h, I2util/I2util/conf.c, I2util/I2util/conf.h, I2util/I2util/errlog.h, I2util/I2util/hex.c, I2util/I2util/hex.h, I2util/I2util/io.c, I2util/I2util/io.h, I2util/I2util/mach_dep.c, I2util/I2util/md5.c, I2util/I2util/options.h, I2util/I2util/random.c, I2util/I2util/random.h, I2util/I2util/readpassphrase.c, I2util/I2util/saddr.c, I2util/I2util/saddr.h, I2util/I2util/table.c, I2util/I2util/util.h, I2util/configure.ac, configure.ac, owamp/api.c, owamp/sapi.c:
	Corrected header-file ordering so that the conf.h file gets included
	before system header files. This allows _LARGEFILE_SOURCE and other
	posix/STDC flags to be set more easily from autoconf macros.

	jeff

	* owamp/stats.c: Removed unneeded test.

	jeff

	* owamp/api.c, owamp/owamp.h, owamp/stats.c, owampd/policy.c, owping/owping.c, powstream/powstream.c:
	Modified all %llu format specification strings to use the inttypes.h
	fmt specifiers for uint64_t (PRIu64) instead.

	Needed for 64bit systems where long long can actually be 128 bits...

	jeff

2006-03-14  boote  <boote@foo.local>

	* I2util/I2util/io.c, owamp/endpoint.c, owampd/fts.c, owampd/owampd.c, owampd/owampdP.h, owping/owping.c, owping/owpingP.h:
	Mostly corrections for 64-bit FreeBSD. (plus one bug fix in endpoint.c)

	io.c
	    adding include of <string.h>

	endpoint.c
	    Fixing buf for skip record allocation. (had MIN where I should have had MAX)
	    Changing type for 'waitfor' variable. - needed for 64-bit.

	fts.c
	    casting to remove warning on 64-bit

	owampd.c,owampdP.h,owping.c,owpingP.h
	    change type for 'waitfor'

	jeff

	* doc/owfetch.man, doc/owping.man, doc/owstats.man:
	Better documentation for the bucket_width. Explained how this determines
	the resolution of the histogram and therefore the resolution of the
	median that is reported. (And explained that for very small maximum delays,
	a bucket_width that is too small will cause the median to be reported as
	a larger number than the maximum.)

	jeff

	* owamp/stats.c, owping/owping.c:
	Modified stats output to work if 'sent == 0'. This can happen if skip
	records end up throwing out all received packets.

	jeff

2006-03-13  boote  <boote@foo.local>

	* I2util/I2util/addr.c, I2util/I2util/io.c, I2util/I2util/io.h, I2util/I2util/util.h, owamp/endpoint.c, owamp/protocol.c, powstream/powstream.c:
	I2util:
	    Created utility function to copy files by fd. (Uses mmap/memcpy so
	    entire copy is in kernel space.)

	owamp/*:
	    changed post-session processing to use two files if needed to
	    remove records from the datafile. (section 3.8 of owamp draft-14)

	powstream:
	    Modified to use mmap utility function. (used to use a local function
	    here - bascially moved it to I2util.)

	jeff

2006-03-10  boote  <boote@foo.local>

	* LICENSE, README: changes for 2.0 release.

	jeff

	* test/README:
	Adding text explaining the Test Vector generation application.

	jeff

	* owamp/time.c:
	Small change to ntp initialization - and now simple owamp tests seem to
	be working now on solaris 8.

	Local tests and tests between packrat(Linux) have been successful.

	jeff

	* owampd/fts.c:
	OS X defined dirfd as a Macro so the test needs to be slightly different...

	jeff

	* owamp/stats.c, owamp/time.c, owampd/fts.c, owampd/fts.h, owampd/owampd.c, owampd/owampdP.h, owampd/policy.c, owampd/policy.h, owping/owping.c, owping/owpingP.h, powstream/powstream.c, powstream/powstreamP.h, test/owtvec.c, I2util/configure.ac, configure.ac, owamp/api.c, owamp/arithm64.c, owamp/capi.c, owamp/context.c, owamp/endpoint.c, owamp/io.c, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, owamp/sapi.c, owamp/schedule.c:
	Changes to make owamp compile on solaris. (This was much more of
	a pain than I realized. Solaris does not support quite the same directory
	API (fts/dirent) as the other systems owamp has been ported to.)

	Thank goodness FreeBSD has reasonable licensing.

	(I'm going to go back to FreeBSD/Linux/OS X and make sure I didn't
	break anything compile-wise before I do any tests of the running code...)

	jeff

2006-03-09  boote  <boote@foo.local>

	* owamp/sapi.c:
	Removing #define of _GNU_SOURCE. I am moving that into the autoconf
	definitions.

	jeff

	* owampd/Makefile.am, owampd/fts.c, owampd/fts.h, owampd/policy.c:
	Pulling source for fts(3) into owampd (from FreeBSD).

	fts(3) does not live in Solaris land...

	This version will be used on all architectures. I would rather use this one
	version for all arch's than do the ugly autoconf conditional include thing...

	If at some point in the future, all supported arch's have fts - then this
	can be removed.

	jeff

2006-03-08  boote  <boote@foo.local>

	* doc/Makefile.am: Forgot owstats.man and owfetch.man in man targets.

	jeff

2006-03-07  boote  <boote@foo.local>

	* doc/Makefile.am: Want to actually install documentation...

	jeff

	* CHANGELOG: Prepare for 2.0...

	* configure.ac: Preparing for 2.0 release...

	jeff

	* doc/index.html: Modifying main doc page to have version 2.0.

	jeff

2006-02-17  boote  <boote@foo.local>

	* owampd/owampd.c, powstream/powstream.c: owampd/owampd.c:
	    Fixing bug found at Jt Tech's workshop. (null uid specified would
	    cause core dump.)

	powstream/powstream.c:
	    Fixed bug with default bucket size specification for sum sessions.
	    (Was resetting to 0 if intermediate sum sessions were not being
	    done, but this interferred with the sum session data created
	    for regular session intervals.)

	jeff

2006-02-04  boote  <boote@foo.local>

	* configure.ac: Preparing for another distribution: OWAMP_2_0_dev_e

	jeff

	* Makefile.am, configure.ac:
	Hmmm, should we include the documentation as part of the distribution?

	After 3 YEARS of distribution! Yes - lets start doing that.

	jeff

2006-01-06  boote  <boote@foo.local>

	* I2util/I2util/addr.c: add cast to remove compiler warning.

2006-01-05  boote  <boote@foo.local>

	* owampd/owampd.c, owampd/policy.c, owampd/policy.h:
	Breaking up policy so that reading of key files is done with
	root permissions, but creation of data directories is done
	after root permissions are reduced.

	jeff

	* owampd/owampd.c:
	Moving policy initialization. It now happens after seteid so any
	filesystem permission problems will be found on startup and not
	during the first test.

	jeff

	* I2util/configure.ac:
	Fixed bug with IPv4 mapped IPv6 addresses. (Internally, these are converted
	into v4 sockaddr structures so the policy matching code gets what it expects.
	The bug was simply that configure was not initializing the macro that
	tells the code that generates that structure that it should be setting
	the sa_len field.)

	* I2util/I2util/addr.c:
	byte swapping functions fail if gcc -O2 is used. I still have not been
	able to figure out why. (It is very hard to examine variables when
	optimization is on.) I have broken up the algorithm in to pieces hoping
	that this will fix it. (will test now)

	Oh, this also only seems to be a problem on native
	64 bit hosts. computers suck.

	jeff

	* configure.ac: Bump version again.

2006-01-04  boote  <boote@foo.local>

	* owamp/sapi.c: Fix uninitialized variable.

	* owamp/protocol.c, owamp/sapi.c: Fixing bug in encrypted mode.

	jeff

	* configure.ac: bumping version number.

2005-12-23  boote  <boote@foo.local>

	* I2util/I2util/addr.c, doc/details.html, doc/index.html, doc/owampd.conf.man, doc/owampd.man, doc/owfetch.man, doc/owping.man, doc/owstats.man, owamp/sapi.c, owamp/stats.c, owampd/owampd.c, owping/owping.c:
	addr.c:
	    comment added

	owamp/doc:
	    Revised for new release. Added documentation for all new features.

	owamp/sapi.c:
	    Changed error messages to be more consistent.

	owamp/stats.c:
	    Modified summary output to report hops instead of TTL.

	owampd.c:
	    Modified usage message to include new options.

	owping.c:
	    Modified usage message to include new options.

	* owamp/capi.c, powstream/powstream.c: capi.c:
	    Bug fix - was attempting to bind the saddr instead of the local one.
	    (testing to localhost doesn't find some things. ;) )

	powstream.c:
	    Fix bug with null control pointer.

	* doc/owamp_arch.graffle: Arch diagram

	* owamp/api.c, owamp/capi.c, owamp/context.c, owamp/endpoint.c, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, owamp/sapi.c, owamp/stats.c, owampd/owampd.c, owampd/policy.c, owping/owping.c, powstream/powstream.c, configure.ac, I2util/I2util/Makefile.am, I2util/I2util/addr.c, I2util/I2util/addr.h, I2util/I2util/errlog.h, I2util/I2util/util.h, I2util/configure.ac:
	configure:
	    Bumping version
	    Adding library checks for math functions

	I2util:
	    configure: Adding checks for socket api calls
	    Adding I2Addr abstraction api from owamp (cleaned it up too).

	owamp:
	    Removed addr abstraction api.
	    Now using I2Addr abstraction api.
	        (localized almost all V4/V6 code into one file!)
	    Found a memory leak in the client FetchSession api.

	powstream:
	    Modified the signal handling code to properly process
	    the current session when a signal comes in. It catches
	    the signal - stops the session and saves as much of the
	    current session as it can based on the process outlined
	    in the spec. (Saving only packet records earlier than the
	    last actual received packet.)

2005-12-20  boote  <boote@foo.local>

	* configure.ac, powstream/Makefile.am:
	Removing direct specification of -lm from the powstream makefile. It
	is now specified from the configure.ac file. (On FreeBSD and OS X the
	ceil() function is in libc - on Linux it is in libm. This allows
	configure to handle this.

	* owamp/stats.c: Adding #include of stdio.h for Linux.

	jeff

	* powstream/powstream.c:
	Removed debugging code. (Oops - didn't mean to check it in.)

	jeff

	* owamp/endpoint.c, owamp/stats.c, powstream/powstream.c: owamp/*.c:

	    Found and fixed two memory leaks.
	        1.) One was introduced by the new stats stuff in powstream.
	        2.) Has existed for two years in the test-endpoint control
	        code.

	jeff

	* configure.ac: configure.ac:

	    Add nice OS X MallocDebug library option. (I actually found the
	    standard malloc with the debugging env variables more useful, but
	    left this in here for the GUI-happy masses.)

	jeff

	* doc/owampd.conf.man, doc/owampd.man, doc/owping.man: doc/*:

	    Document server binding options a little better.
	    Document rootfolly option.
	    Document bucket_width option.

	jeff

2005-12-16  boote  <boote@foo.local>

	* owampd/policy.c, powstream/powstream.c, powstream/powstreamP.h, owamp/endpoint.c, owamp/stats.c, owampd/owampd.c, owampd/owampdP.h:
	endpoint.c:
	    Modified ttl code to support multiple ways of receiving ttl.
	    (linux is different from BSD derived systems.)
	stats.c:
	    Increased buffer allocation factor.
	    Fixed a border case in sub-session statistics
	    Modified not to use soft-float stuff - just isn't everywhere yet.
	owampd.c:
	    Added rootfolly option
	    moved setuid code around to be easier.

	powstream.c:
	    Added new stats stuff.

2005-12-13  boote  <boote@foo.local>

	* configure.ac: Autoconf bs to link -lm.

	jeff

2005-12-10  boote  <boote@foo.local>

	* owamp/Makefile.am, owamp/api.c, owamp/endpoint.c, owamp/owamp.h, owamp/protocol.c, owamp/schedule.c, owamp/stats.c, owping/owping.c, owping/owpingP.h, powstream/powstream.c, powstream/powstreamP.h, I2util/I2util/table.c, I2util/I2util/table.h, doc/owping.man:
	I2Util:
	    table.c (Modify a signed value to an unsigned one for num table elems.)

	doc:
	    owping - command-line option additions for statistics.
	        added -a multiple percentile options (modified from previous)
	        added -n units option
	        added -M (machine parsable output)

	owamp:
	    Added stats.c functions and headers.
	    endpoint.c - cleanup
	        Corrected recv session to output missing packet records
	        for early terminated tests.
	    owping.c - totally changed statistics. They now use a fixed
	        amount of memory, and are correct in many cases where
	        they were not before. Added 'jitter' as well.
	        added options.

	powstream still needs to be modified to use the statistics.

	jeff

2005-11-03  boote  <boote@foo.local>

	* doc/owstats.man: Updated the -R option to include the TTL field.

	jeff

2005-10-26  boote  <boote@foo.local>

	* owamp/api.c, owamp/endpoint.c, owamp/io.c, owampd/owampd.c, powstream/powstream.c:
	Fixed some signal handling problems in owamp.

	api.c:
	    Simplified error detection code in the StopSessions function.

	endpoint.c:
	    Modified IPV6_HOPLIMIT reading to correctly read the data as a
	    full int. (Was using unsigned char...)

	    Changed IPv4 TTL reading to use ancilary type IP_RECVTTL instead
	    of IP_TTL. This is more in-line with the standards docs and seems
	    to work on FreeBSD and OS X. However... I will need to test it on
	    linux. I believe Linux uses IP_TTL for the RECV side as well. If so
	    I will need to put some linux specific code in to handle this.

	io.c:
	    Modified the signaling part to fail more gracefully if the write/read
	    function fails due to a broken pipe.

	owampd.c:
	    Adding a shutdown(2) of socketpair sockets in the main owampd control
	    process during a graceful shutdown. (child processes were hanging
	    while attempting to "release" resources over the pipe.)

	powstream.c:
	    changing the -C option to -N: I like it better.

	    modifying the error handling code to reset "both" control connections
	    instead of just the one with the problem.

	    Moved some of the state resetting code to the end of the main control
	    loop to simplify the logic.

	jeff

2005-10-20  boote  <boote@foo.local>

	* owamp/api.c, owamp/endpoint.c, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, powstream/powstream.c, powstream/powstreamP.h:
	owamp library:
	Adding functions to actually read the skip records out of the file for
	statistical purposes.

	powstream:
	Adding ability to terminate early on a unix signal - saving the partial
	session using the skip records data. (This still needs to be added
	for owping - after SC.)

	jeff

2005-10-15  boote  <boote@foo.local>

	* owamp/api.c, owamp/endpoint.c, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, owamp/sapi.c, powstream/powstream.c, powstream/powstreamP.h:
	Added functionality to terminate a powstream session early by sending
	it a signal.

	Modified "finished" information to be an actual enum within the
	code instead of a u_int32_t.

	Added rec_size as inforation in the file "hdr" structure to deal
	with differences between current owp files and future files that
	have ttl in them.

2005-10-12  boote  <boote@foo.local>

	* owamp/api.c, owamp/arithm64.c, owamp/capi.c, owamp/context.c, owamp/endpoint.c, owamp/error.c, owamp/io.c, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, owamp/rijndael-alg-fst.c, owamp/rijndael-api-fst.c, owamp/rijndael-test-fst.c, owamp/sapi.c, owamp/schedule.c, owamp/time.c, owampd/owampd.c, owampd/owampdP.h, owampd/policy.c, owampd/policy.h, owping/owping.c, test/owtvec.c:
	Modified all formatting to remove tabs and use 4 char indents.

	jeff

	* powstream/powstream.c, powstream/powstreamP.h:
	Basically: Adding ttl code into powstream

	fixing mmap file copy code (the read file also needs PROT_WRITE).

	Reordered summary code to get fileend before checking for records.

	Modified summary generation code to include ttl information.

	jeff

2005-10-06  boote  <boote@foo.local>

	* owamp/api.c, owamp/endpoint.c, owamp/owampP.h, owamp/time.c, powstream/powstream.c:
	Fixed several bugs that were exposed by running on OS X:

	api.c:
	    initialized variable problem

	endpoint.c:
	    Made sequence numbers consistently 32 bit quantities.
	    Fixed type mismatch in function definition/function prototype.

	time.c:
	    Made timespec -> timestamp conversion encode error estimates
	    with scale=64 and mult=1 if !sync.

	(powstream still has problems but owping/owampd have been tested a
	fair bit on OS X now.)

	jeff

	* owampd/owampd.c, owping/owping.c, powstream/powstream.c, powstream/powstreamP.h, test/owtvec.c:
	General:
	Modified code to remove compiler warnings.
	reformatted some of the code to remove annoying tabs.
	(Will go through and reformat the rest before releasing.)

	powstream.c:
	    Major rework - simplified the code (somewhat). Summary files
	    are now the "intermediate" data output by powstream. It only
	    puts out raw data files based on the larger interval you give
	    it. (On abilene that is currently 12 hours... we may want to
	    change that.)

	    Summary statistics will be put out more regularly. I suspect
	    we will stick with the 30 second summary sessions for abilene.


	**** Not TESTED! ****

	It compiles completely clean, but I have not had a chance to run it
	yet. (It does compile on OS X as well... I guess this is what happens
	when that is what is sitting in front of me.)

	owamp plans:

	Testing starts next week along with major reworking of the ami
	perl scripts to handle the ttl data as well as the new interval
	setup of powstream. (I intend to gut most of the "validation" code
	from the ami scripts and use the "skip records" from the raw data
	files for this. It should make the database code about 50% easier!)

	jeff

2005-09-30  boote  <boote@foo.local>

	* powstream/powstream.c, powstream/powstreamP.h:
	Checkpoint. powstream is currently a mess.

	jeff

	* configure.ac:
	Adding check for sys/timex.h to determine if NTP syscalls avail.

	jeff

	* owping/owping.c:
	Modified context funcs to remove (void*)func_ptr issues.

	jeff

	* owampd/owampd.c, owampd/policy.c:
	Modified context to remove (void*)func_ptr issues.

	jeff

	* owamp/context.c, owamp/endpoint.c, owamp/owamp.h, owamp/time.c:
	Modified context functions to remove (void*)func_ptr related
	compiler warnings.

	Removed NTP requirement for owamp. (unleash the chaos) [UNTESTED]

	jeff

	* I2util/config/c-attribute.m4, I2util/config/c-syslog-names.m4, I2util/config/c-syslog-perror.m4, I2util/config/randomdev.m4:
	autoconf depricated macros I was using. Modified these to use new
	ones.

	jeff

	* config/c-attribute.m4:
	Stupid autoconf always changing and never getting better...

	complex_build_software--

	jeff

2005-08-28  boote  <boote@foo.local>

	* I2util/doc/aespasswd.man:
	Added a some explanitory text that mentions the name of the bwctld.keys and
	owampd.keys file based on feedback from walter (auburn)

	jeff

2005-07-17  boote  <boote@foo.local>

	* I2util/I2util/ErrLogSyslog.c:
	Adding newline to fprintf output of PERROR code.

	jeff

2005-07-16  boote  <boote@foo.local>

	* I2util/config/c-syslog-perror.m4, I2util/configure.ac:
	Adding autoconf magic for determining if the OS syslog supports LOG_PERROR.

	jeff

	* I2util/I2util/ErrLogSyslog.c, I2util/I2util/errlog.h:
	Adding code to print error messages to stderr in the I2Util error module
	to handle LOG_PERROR directly if syslog does not provide the functionality.

	jeff

2005-07-15  boote  <boote@foo.local>

	* I2util/I2util/ErrLogSyslog.c, I2util/I2util/Options.c, I2util/I2util/conf.c, I2util/I2util/readpassphrase.c, I2util/configure.ac:
	Porting to Solaris... This compiles, I have yet to do any real testing.
	Once this is checked in, I will make sure these changes don't break
	Linux/FreeBSD.

	configure.ac:
	    Adding socket,nsl,rt libraries
	    Adding check for paths.h header file

	ErrLogSyslog.c:
	    Define LOG_AUTHPRIV and LOG_FTP if they are not defined.

	Options.c:
	conf.c:
	    Adding cast from char to int for all isspace/isdigit args.

	readpassphrase.c:
	    remove cdefs.h.
	    Add check for autoconf paths.h value, include or define _PATH_TTY.
	    Adding cast from char to int for all isspace/isdigit args.

	bwctl.c:
	    Adding cast from char to int for all isspace/isdigit args.
	    Change setenv to putenv to set POSIXLY_CORRECT for getopt.
	    Check for LOG_PERROR. (Add warning if -r is passed in, and
	        LOG_PERROR is not available.)

	bwctld.c:
	    Add check for LOG_PERROR.

	policy.c:
	    Remove fts.h - not even used here, this is an owamp leftover...
	    Adding cast from char to int for all isspace/isdigit args.

	util.c:
	    Adding cast from char to int for all isspace/isdigit args.

2005-07-14  boote  <boote@foo.local>

	* I2util/I2util/readpassphrase.h: Removing cdefs here too...

	* I2util/I2util/util.h:
	changing stdint to inttypes. Sometimes standards are less than clear... !%##@

	* I2util/I2util/table.h, I2util/I2util/util.h:
	Adding include of stdint.h to get the uint* types on linux.

	* I2util/I2util/md5.h: Removing reference to sys/cdefs.h.

	jeff

	* I2util/I2util/conf.c, I2util/I2util/conf.h, I2util/I2util/hex.c, I2util/I2util/hex.h, I2util/I2util/md5.c, I2util/I2util/md5.h, I2util/I2util/saddr.c, I2util/I2util/saddr.h, I2util/I2util/table.c, I2util/I2util/table.h, I2util/aespasswd/aespasswd.c:
	changing all u_int* types to uint* types so they agree with the latest
	'C' standard. This is part of a Solaris port - I am about to make sure this
	still works on Linux/FreeBSD...

	jeff

2005-06-21  boote  <boote@foo.local>

	* owamp/protocol.c, owamp/sapi.c:
	I introduced a few bugs in the new version with regard to authenticated
	mode. (Basically, the SendBlocks function is destructive for the
	passed in message, and I was using memory I wanted to look at later.)

	This is somewhat non-intuitive (It would be nice if Send was not destructive)
	however, I don't want to add an extra copy in to everything, so I will just
	need to be more careful.

	jeff

2005-06-20  boote  <boote@foo.local>

	* owampd/policy.c:
	Corrected size of copy. (Only the first 4 chars of a username were actually
	being used to match for policy decisions.)

	jeff

2005-05-10  boote  <boote@foo.local>

	* owamp/api.c, owampd/owampd.c, owping/owping.c, powstream/powstream.c, powstream/powstreamP.h:
	Added support for ttl and the new file API into powstream.

	jeff

2005-05-09  boote  <boote@foo.local>

	* CHANGELOG, configure.ac: Preparing for a 2.0dev-a release.

	jeff

	* owping/owping.c:
	Corrected logic for "raw" option. (There is some confusing interplay
	between the "quiet" and the "raw" option. I need to correct this someday...)

	jeff

2005-05-06  boote  <boote@foo.local>

	* doc/owampd.man, owamp/capi.c, owamp/endpoint.c, owamp/sapi.c, owampd/policy.c:
	owampd.man:
	    Documented error message philosophy.
	    Documented SIGNAL usage.

	owamp/capi.c:
	owamp/endpoint.c:
	owamp/sapi.c:
	owampd/policy.c:
	    Changed error levels for some messages. INFO is now used exclusively
	    for "access" log issues.

	jeff

2005-05-03  boote  <boote@foo.local>

	* conf/owampd.limits, doc/owping.man, owping/owping.c:
	Changed the default test back to 10hz. (Stas convinced me it is better.)

	jeff

	* doc/owping.man, owping/owping.c:
	Changed default test to 1 packet per second, and 10 packets.

	jeff

	* owping/owping.c: changed how the "quiet" option works slightly.

	jeff

	* doc/owping.man, owping/owping.c: owping.man:
	    Adding TTL output information to -R

	owping.c:
	    Correct "comments" regarding the -R "printraw" function.

	jeff

2005-05-02  boote  <boote@foo.local>

	* owping/owping.c: syntax...

	jeff

	* doc/owping.man, owamp/api.c, owping/owping.c: api.c:
	    Deal with division by 0 in OWPTestPacketRate.

	owping.c:
	    Add summary statistics for ttl.
	    Add output of "end of test" estimate.

	owping.man:
	    Document the -z option (delay start).

	jeff

2005-04-30  boote  <boote@foo.local>

	* owping/owping.c: Oops - syntax.

	jeff

	* owping/owping.c, owping/owpingP.h:
	Adding a -z option to owping. (delayStart) This option is used to run
	a test the specified number of seconds in the future.

	jeff

2005-04-29  boote  <boote@foo.local>

	* configure.ac, owamp/endpoint.c, owamp/owampP.h:
	Removed all shm stuff. The portability issues were not worth the marginal
	performance enhancement.

	jeff

2005-04-28  boote  <boote@foo.local>

	* owamp/api.c, owamp/capi.c, owamp/endpoint.c, owamp/owampP.h, owamp/sapi.c, owping/owping.c:
	Initial port to Linux, and

	I FINALLY FOUND THE WEIRD MEMORY BUG!
	When I introduced the IPC mechanism, I had to change where the datafile was
	closed so the parent could access it after the child exits. However, I
	forgot that I had specified the file buffer directly, and this was
	still being freed. Unfortunately, efence was only marginally useful in finding
	this because memory accesses inside the file io functions are somehow
	trapped differently. But, 4 hours later.... I finally figured it out.

	jeff

2005-04-27  boote  <boote@foo.local>

	* owamp/api.c, owamp/endpoint.c, owping/owping.c:
	Added shm file sizing.

	jeff

	* owamp/capi.c, owamp/endpoint.c, owamp/sapi.c, owping/owping.c:
	Corrected FetchSession interaction. Needed to send block of IZP between
	skips and data records even if there are no skips. I had accidentily put the
	write of that block in the if(num_skiprecs) block.

	Simplified the Data file reading code slightly.

	Corrected FetchSession interaction. Needed to send block of IZP between
	skips and data records even if there are no skips. I had accidentily put the
	write of that block in the if(num_skiprecs) block.

	Simplified the Data file reading code slightly.

	Still to be done for this version (aiming for this week):

	        Fix shared memory IPC - just need to add an fdtruncate call
	        to assign the file size. (Currently using normal files for
	        IPC - this is a compile time selection.)

	        Add ttl summary info to owping/owstats output.

	        Test ttl data on an OS that supports it...

	        Add sub-session summaries to powstream so AMI database host
	        interaction can be optimized.

	        Porting to additional OS's.

	jeff

2005-04-26  boote  <boote@foo.local>

	* owamp/api.c, owamp/endpoint.c, owamp/owamp.h, owamp/protocol.c, owamp/sapi.c, owampd/policy.c, owping/owping.c:
	Bug fixes for new code:

	Needed to modify where the datafile is closed. (It used to be closed
	in the parent immediately, now the parent has to go through the data
	when the stop sessions message comes in to delete records after
	(stoptime - timeout).

	Also needed to modify all fdopens to open w+ instead of w so the
	records can be queried as well as written.

	Needed to modify the interpolated binary search to round instead of truncate
	when determining the candidate.

	Missed a few spots where the return type of the DataHeader write functions
	changed return values. (They now return boolean - they used to return int's.)

	Receive sessions are working from owping now. There is still a problem with
	the Fetch protocol at the moment that I have not tracked down yet.

	jeff

2005-04-22  boote  <boote@foo.local>

	* powstream/powstream.c: Ugh. - typo.

	jeff

	* powstream/powstream.c: Just formatting changes.

	jeff

2005-04-21  boote  <boote@foo.local>

	* owping/owping.c, powstream/powstream.c:
	Modified api call for reading an owp file header.

	jeff

	* configure.ac, owamp/endpoint.c:
	Adding autoconf rules for disabling the use of shared-mem for IPC.

	jeff

	* owamp/api.c, owamp/capi.c, owamp/owampP.h, owamp/protocol.c, owamp/sapi.c:
	Fixing syntax errors (typos).

	jeff

2005-04-20  boote  <boote@foo.local>

	* owamp/api.c, owamp/arithm64.c, owamp/capi.c, owamp/endpoint.c, owamp/io.c, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, owamp/sapi.c, owampd/owampd.c, owping/owping.c, powstream/powstream.c, I2util/aespasswd/aespasswd.c, doc/details.html, doc/index.html, doc/owamp_arch.png:
	I2util/
	aespasswd.c:
	    Fixed C macro for creating a string out of a constant.

	doc/*:
	    *   Added some NTP details based on user comments. (These are old, I
	    still need to incorporate comments from the Atl workshop.
	    *   Made arch diagram a little nicer.

	owamp/*:
	    Changes to deal with IPC for reporting back skip ranges to control
	    process from the "sender" process. Also, changes for the file format
	    to deal with skip records and of course changes to deal with the
	    modifications to the StopSessions and FetchSession protocols.

	owampd/*:
	    Forgot to initialize a variable.

	owping:
	    formatting changes

	powstream:
	    change iotime to 3.

	jeff

2005-03-15  boote  <boote@foo.local>

	* I2util/I2util/io.c, I2util/I2util/random.c, I2util/I2util/random.h, I2util/I2util/table.c:
	better comments.

	jeff

2004-12-02  boote  <boote@foo.local>

	* doc/index.html: Added a link to J-OWAMP.

2004-10-05  boote  <boote@foo.local>

	* owamp/capi.c, owamp/endpoint.c, owamp/owamp.h, owamp/protocol.c, owamp/sapi.c:
	Adding some new failure (accept) values into code.

	jeff

2004-09-28  boote  <boote@foo.local>

	* owamp/endpoint.c: remove unused vars.

	jeff

2004-09-27  boote  <boote@foo.local>

	* owamp/endpoint.c: typo's.

	jeff

	* configure.ac: Upgrade to version 2.0a.

	jeff

	* owamp/owamp.h, owamp/protocol.c:
	owamp.h: Modify "standard" owamp port to 4824

	protocol.c: change format of "fetch session" response records. (re-order
	    fields to make alignment marginally better.)

	jeff

	* owamp/endpoint.c:
	Modified sender not to send packets that should have been sent more than
	"timeout" in the past. (change in spec)

	jeff

2004-09-23  boote  <boote@foo.local>

	* powstream/powstream.c:
	correct summary data for case of duplicate packets.

	jeff

	* owping/owping.c, owping/owpingP.h: owping.c
	owpingP.h:
	    Adding -D and -H options for setting typeP in owmap protocol with
	    DSCP or PHB values.

	jeff

	* owamp/capi.c, owamp/endpoint.c, owamp/owampP.h, owamp/protocol.c, owamp/sapi.c:
	capi.c:
	sapi.c:
	owampP.h:
	    Modify calls to endpoint start hooks to expect a possible return
	    of "EUNSUPPORTED" error codes so PHB option could be passed to server.
	    (owampd still can't do anything with this option and will fail to start
	    the test, but another owamp-test server may have the capability and this
	    simply allows the option to be set for requests.)
	endpoint.c:
	    Decode and use the typeP word. If it is a DSCP value, set TOS sockopt
	    to do it. If it is a PHB return unsupported.
	protocol.c:
	    Remove validate of typeP from here and move it into endpoint so the
	    option can be passed within the protocol.

	jeff

	* doc/owping.man: Document the typeP options.

	jeff

2004-09-22  boote  <boote@foo.local>

	* owping/owping.c, owping/owpingP.h: reformat to 4-char tab stops.

	jeff

	* owping/owping.c: change format for 'usage' message slightly.

	jeff

2004-09-10  boote  <boote@foo.local>

	* I2util/I2util/ErrLog.c, I2util/I2util/ErrLogSyslog.c, I2util/I2util/conf.c, I2util/I2util/conf.h, I2util/I2util/errlog.h:
	Merging SERVLESS_CLIENT changes into HEAD.

	errlog.h:
	ErrLog.c:
		Ignore messages with level "none".

	ErrLogSyslog.c:
		Add "none" priority

	conf.h:
	conf.c:
		Added str2num function to deal with suffix multiples. i.e. 100k 'k'.
		Added str2byte function to deal with suffix multiples. i.e. 100k 'k'.
		(these are different in that 'num' function uses k == 1000, and
		byte function uses k == 1024.
	jeff

2004-09-09  boote  <boote@foo.local>

	* I2util/I2util/ErrLogSyslog.c, I2util/I2util/errlog.h:
	SYSLOG_NAMES is painful...

	jeff

	* I2util/I2util/ErrLogSyslog.c, I2util/I2util/errlog.h:
	Adding includes for syslog.h in slightly different places.

	jeff

	* I2util/I2util/ErrLog.c, I2util/I2util/ErrLogSyslog.c, I2util/I2util/errlog.h:
	Splitting error log messages from access log messages using the syslog
	"priority". There are two new bwctld.conf parameters to control this.

	(This also now makes it possible to shut-up the spawned off daemon from
	bwctl...)

	jeff (still need to test.)

2004-08-23  boote  <boote@foo.local>

	* owampd/policy.c: Added more info to debug messages.

	Moved str2num functions into I2util library.

	jeff

2004-08-20  boote  <boote@foo.local>

	* I2util/I2util/conf.c:
	syntax errors - stand-alone client now compiles. (now onto real testing...)

	jeff

	* I2util/I2util/conf.c, I2util/I2util/conf.h:
	Completed the code to implement a client side spawned server. Not yet
	tested.

	jeff

2004-07-26  boote  <boote@foo.local>

	* owamp/capi.c, owamp/endpoint.c, owamp/sapi.c, owamp/time.c:
	Hacks to port to apple. (Notice this is only in the OWAMP_1_6f_apple
	branch of cvs. - the hack to make ntp_adjtime work requires a hacked kernel,
	and the getaddrinfo hack is ugly... I'm not bringing this into the mainline
	for now.)

	jeff

	* conf/owampd.limits: Changing default config to allow 1 mb/s sessions.

	jeff

2004-07-08  boote  <boote@foo.local>

	* doc/index.html: Added a recommended hardware section.

	jeff

2004-06-29  boote  <boote@foo.local>

	* owamp/endpoint.c, owampd/policy.c:
	Initialize 'rc' so fine optimized code still works... Ugh.

	re-order some conf file parsing for permissions reasons. Then take root
	permissions back to open keys/limits files.

	jeff

2004-06-28  boote  <boote@foo.local>

	* owamp/endpoint.c, owamp/owampP.h:
	Modified socket options to be AF specific. (ttl becomes hoplimit in IPv6)

	jeff

	* owamp/endpoint.c:
	Modified code to only try and do ttl if the right sockopt is available.
	(It is not on older FreeBSD systems like we are using on Abilene... Ugh.)

	jeff

	* owamp/api.c: Decode version 3 file headers too...

	jeff

	* configure.ac: Updated version number to 1.7a

	This will be the first version to support ttl.

	jeff

	* owamp/sapi.c:
	found another place where the change in test record size to support ttl
	caused a needed buffer size change.

	jeff

	* owamp/api.c, owamp/owampP.h:
	Corrected ProcessFetchSession to handle the new version 3 files.

	Modified the message buffer to be large enough to hold the new
	fetch records buffer size.

	jeff

	* owping/owping.c:
	Modified the "raw" output to include the TTL value of the packet.

	jeff

	* owamp/endpoint.c:
	Fixed recvttl function. Was using the wrong constants to decode the
	ancillary data.

	jeff

	* conf/owampd.conf: removed "boote" path stuff...

	* powstream/powstream.c, owping/owping.c, owampd/owampd.c, owamp/Makefile.am, owamp/api.c, owamp/context.c, owamp/owampP.h, owamp/protocol.c, owamp/sapi.c, owamp/schedule.c, owamp/unixtime.c:
	Fixed many "minor" compiler warnings. (mostly unused vars and the like)

	jeff

	* I2util/I2util/ErrLogSyslog.c, I2util/I2util/errlogsyslog.h:
	Corrected reset function to return I2Boolean.

	jeff

2004-06-19  boote  <boote@foo.local>

	* owamp/api.c, owamp/endpoint.c, owamp/time.c, I2util/I2util/ErrLogSyslog.c, I2util/I2util/hex.c, I2util/I2util/hex.h, I2util/I2util/table.c:
	Some compile errors fixed... will fix the rest next week.

	jeff

	* owamp/endpoint.c, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, owamp/sapi.c, owamp/time.c, owamp/unixtime.c, powstream/powstream.c, powstream/powstreamP.h, owamp/api.c:
	Unified "time" api code so all time functions go through the functions
	in time.c.

	Created version 3 of the owd file format to support ttl data in the records.

	Modified the code to set the ttl and retrieve the ttl.

	Created single functions for encoding and decoding data records to make it
	more simple to change the file i/o functions.

	Simplified the "receiver" code by using file i/o functions.

	Modified the way "lost packet" records are encoded in the protocol data
	stream and in files.

	removed functions from unixtime.c

	(all this still needs to be compiled and tested...)

	jeff

2004-06-09  boote  <boote@foo.local>

	* configure.ac, doc/index.html: Preparing to tag version OWAMP_1_6f.

	jeff

	* CHANGELOG:
	Adding a changelog file for owamp. (Just used rcs2log - but it is better
	than nothing, and was dead easy to do.)

	jeff

	* owampd/owampd.c, owping/owping.c:
	owampd.c: re-ordered descriptor cleanup code.

	owping.c: syntax error.

	jeff

	* owampd/owampd.c:
	Thought of a more simple way to close "most" of the open fd's in the
	child. This will be important when I add the partial sessions (lots more
	fd's will be in use.)

	jeff

	* conf/owampd.conf:
	change the comment to reflect the new limits on portrange.

	jeff

	* doc/owampd.conf.man, doc/owampd.man, doc/owping.man, owampd/owampd.c, owping/owping.c:
	*.c:
		Disallow port ranges of a single value other than 0.
		Disallow port ranges where low>high.

	doc/*:
		Document port range options.

	jeff

	* I2util/I2util/ErrLog.c, I2util/I2util/ErrLogSyslog.c, I2util/I2util/errlog.h, I2util/I2util/errlogsyslog.h, conf/owampd.conf, owamp/api.c, owamp/endpoint.c, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, owampd/owampd.c, owampd/owampdP.h, owampd/policy.c, owping/owping.c, owping/owpingP.h:
	I2Util/*:
		Adding functionality to allow error logs to be "reset" after a
		process forks. Specifically added this functionality to the
		"syslog" logger.

	owampd.conf,owampd.c:
		Added portrange to owampd.
		Removed current code that closed file descriptors in child.
		Did not work correctly - can only close descriptors from other
		parent/child pipes. Will fix this another time.
		Added code to reset syslog after fork.
	endpoint.c:
		Fixed bad error format string.

	protocol.c,owampP.h:
		Fixed a bug that resulted in the server configured port
		value being lost, and not saved in the owp files with the
		rest of the TestRequest record.

2004-06-08  boote  <boote@foo.local>

	* owping/owping.c: shortcutting ephemeral specification...

	* owamp/endpoint.c, owping/owping.c, owping/owpingP.h: endpoint.c:
		removed assumption that "low" range of 0 means ephemeral.
		Not setting OWPTestPortRange at all means ephemeral.

	owping[P].{ch}:
		Adding -P option to allow owping to make use of OWPTestPortRange

	jeff

2004-06-07  boote  <boote@foo.local>

	* owamp/capi.c, owamp/endpoint.c, owamp/owamp.h:
	Added hooks to allow a port range to be specified for the test stream.

	Now I have to go to the applications (owampd/owping/owampd) and have them
	use the hooks. (and test this.)

	jeff

2004-06-04  boote  <boote@foo.local>

	* doc/owping.man: Adding just a bit more...

	jeff

	* owping/owping.c: Corrected syntax errors.

	jeff

	* doc/owping.man: Too many letters...

	* doc/owping.man: spell checked...

	jeff

	* doc/owping.man, owping/owping.c, owping/owpingP.h:
	Adding general schedules.

	jeff

2004-05-28  boote  <boote@foo.local>

	* owampd/owampd.c, owampd/policy.c: Oops - missed a few references.

	jeff

	* owampd/Makefile.am, owampd/conf.c, owampd/conf.h, owampd/policy.c:
	Removing conf file functions from owamp library. I put versions of these
	into the I2util library when bwctl was written, this allows bwctl/owamp to
	share more code.

	jeff

	* owamp/context.c, owamp/io.c, owamp/owamp.h, owamp/owampP.h, powstream/powstream.c:
	Added code to allow low level client I/O to be interruptable. This will
	correct infrequent problems we have had with powstream hanging.

	jeff

2004-05-27  boote  <boote@foo.local>

	* owamp/endpoint.c, owamp/protocol.c, owampd/owampd.c, owampd/policy.c, owping/owping.c:
	Corrected a number of bugs in the AES implementation within the test packets.

	Added debugging code.

	Corrected AES encryption for the fetch-session message. (The "zero" buffer
	was being contaminated by the fact that _OWPSendBlocks encrypts back to
	the same buffer that is sent to it.)

	Cleaned up some compile messages.

	All encryption modes look like they are working correctly now.

	jeff

2004-05-21  boote  <boote@foo.local>

	* owampd/owampd.c:
	close file descriptors in new owampd-control processes.

	jeff

2004-05-20  boote  <boote@foo.local>

	* owping/owpingP.h, powstream/powstream.c, powstream/powstreamP.h, test/owtvec.c, bootstrap, owamp/context.c, owamp/endpoint.c, owamp/owamp.h, owamp/owampP.h, owamp/time.c, owping/owping.c:
	bootstrap: corrected to work with later versions of autoconf.

	context.c: Added do-nothing SIGCHLD handler, NTP initialization.
	endpoint.c: Removed NTP initialization.
	time.c: Added NTP init function.
	owping.c: Cleanup, added aes passphrases, fixed aes bug.
	powstream.c: ""

	I have not tested the passphrase stuff with the server yet - but it
	seems to be working correctly.

	jeff

	* doc/owampd.conf.man, doc/owampd.keys.man, doc/owampd.limits.man, doc/owampd.man, doc/owfetch.man, doc/owping.man, doc/owstats.man:
	Mostly adding comments that allow vim to assign the correct filetype - just
	makes the syntax highlighting work correctly.

	jeff

2004-05-13  boote  <boote@foo.local>

	* doc/index.html: fixed typo.

	jeff

	* doc/owampd.man, doc/owping.man: spelling.

	jeff

	* doc/owampd.conf.man, doc/owampd.limits.man, doc/owfetch.man, doc/owping.man, doc/owstats.man:
	Eric's comments.

	jeff

	* owamp/Makefile.am, owamp/owamp.h, owamp/util.c, owampd/policy.c, owping/owping.c:
	Modified owamp to use I2Hex functions instead of built-in.

	jeff

	* doc/owfetch.man: susan edits

	jeff

	* doc/owampd.man: Susan edits.

	* doc/index.html: Reset current version to 1.6d

	jeff

2004-05-12  boote  <boote@foo.local>

	* doc/index.html: Corrected bold in title.

	jeff

	* doc/index.html: Added a link to the spec into the overview document.

	jeff

	* doc/owampd.conf.man, doc/owampd.limits.man:
	Modified description of disk limits to be consistant between these files.

	jeff

	* doc/owampd.limits.man: owampd.limits.man page.

	* doc/owampd.keys.man: Documentation on keys file.

	jeff

2004-05-11  boote  <boote@foo.local>

	* doc/details.html, doc/owampd.conf.man, doc/owampd.man, doc/owfetch.man, doc/owping.man, doc/owstats.man:
	details.html:
		Add information on allowing others access to query ntpd.

	*.man:
		Modifying encryption description.
		adding owfetch/owampd.conf

	jeff

2004-05-10  boote  <boote@foo.local>

	* doc/owampd.man, doc/owping.man, doc/owstats.man:
	Incorporated Susan's edits.

2004-05-07  boote  <boote@foo.local>

	* doc/owampd.man: spell checked.

	jeff

	* doc/owampd.man, doc/owping.man:
	Modified the description of encrypted mode in owping.man

	Added a man page on owampd.

	jeff

	* owampd/owampd.c: Added the -e option to the "usage" message.

	jeff

	* doc/owping.man, doc/owstats.man: spell checked...

	* doc/owping.man, doc/owstats.man:
	Added examples and alphabetized args in owping.man

	Created owstats.man.

	jeff

2004-05-05  boote  <boote@foo.local>

	* owping/owping.c, owping/owpingP.h: Removing the '-V' option.

	jeff

	* doc/owping.man: first real cut at an owping(1) manual page.

	jeff

2004-05-04  boote  <boote@foo.local>

	* doc/details.html, doc/index.html: Incorporating Susan's edits.

	jeff

2004-05-03  boote  <boote@foo.local>

	* doc/details.html, doc/owping.man: Minor changes...

	* doc/details.html, doc/index.html, doc/owamp_arch.png, doc/owamp_arch.vsd, doc/owping.man, owamp/protocol.c:
	owamp/protocol.c:
		Adding comments for the format of the data record in a fetch message.

	doc/*:
		Adding some documentation. Overview and details are fairly complete
		- just starting man pages. owping.man file is not ready to be
		reviewed.

	jeff

	* powstream/powstream.c:
	Fixed bug that Ralf found. (powstream didn't work unless you used the -b
	option.)

	jeff

2004-04-28  boote  <boote@foo.local>

	* bench/timeintervals.c, bench/timesyscall.c:
	Adding two simple benchmark programs that are being used to make decisions
	about how implement the software clock in owamp.

	jeff

2004-03-24  boote  <boote@foo.local>

	* powstream/powstream.c: Adding message when sig is caught.

	jeff

2004-03-10  boote  <boote@foo.local>

	* owampd/owampd.c: syntax error.

	jeff

	* configure.ac, owamp/endpoint.c, owampd/policy.c: new version 1.0e

	jeff

	* owamp/endpoint.c:
	Changed to use esterr again. maxerr is just way too conservative to be useful.

	jeff

	* owampd/policy.c: Fix AES key policy bug.

	jeff

2004-03-04  boote  <boote@foo.local>

	* I2util/doc/aespasswd.man: Susan's edits.

	jeff

2004-03-03  boote  <boote@foo.local>

	* I2util/bootstrap:
	Rich, the bootstrap file I was saying you needed to change was the one in
	the top-level dir.  This one should be fine.

	jeff

2004-03-03  rcarlson  <rcarlson@foo.local>

	* I2util/bootstrap:
	changed bootstrap file for I2util per Jeff Boote comments

2004-03-03  boote  <boote@foo.local>

	* owamp/endpoint.c, owampd/owampd.c: endpoint.c:
		Changed time error estimates to use "maxerror" instead of "esterror".

	owampd.c:
		Cleaned up logic slightly and commented a little better.
		(I did this when explaining the source to Rich.)

	jeff

2004-03-02  rcarlson  <rcarlson@foo.local>

	* I2util/config/c-attribute.m4:
	updated configure.ac to include I2UTILINC functions.  This should allow the
	NDT web100srv.c code to use the LoadConf function.

2004-02-25  boote  <boote@foo.local>

	* I2util/support/mandoc.cgi: mandoc.cgi:
		calls man2html using INC path instead of using full path.

	*.html:
		removed 
's - futile....

	* I2util/support/mandoc.cgi:
	Added check for redirect_url to make sure access checking has happened
	in apache. (This only works if the cgi is installed as an action handler, if
	it is a normal cgi, this extra security is impossible.

	jeff

2004-02-21  boote  <boote@foo.local>

	* I2util/doc/aespasswd.man:
	Disabled hyphenation in url references in manpages. The hypphenation broke
	the url stuff I added to man2html to make url's links in html'd man pages.

	This all works now, but I can't install it on e2epi because the server
	feature I need is not activated. I have made a request to websupport
	for that.

	To see the man pages for now, take a look at:

	http://people.internet2.edu/~boote/bwctl.man

	jeff

	* I2util/support/man2html3.0.1/CHANGES, I2util/support/man2html3.0.1/COPYING, I2util/support/man2html3.0.1/MANIFEST, I2util/support/man2html3.0.1/README, I2util/support/man2html3.0.1/doc/man2html.1, I2util/support/man2html3.0.1/doc/man2html.html, I2util/support/man2html3.0.1/doc/man2html.ps, I2util/support/man2html3.0.1/doc/man2html.txt, I2util/support/man2html3.0.1/install.me, I2util/support/man2html3.0.1/man.cgi, I2util/support/man2html3.0.1/man2html, I2util/support/mandoc.cgi:
	Adding man conversion tools into CVS... (Actually... I'm going to move
	this down into I2util after checking in...)

	jeff

2004-02-17  boote  <boote@foo.local>

	* I2util/Makefile.am, I2util/bootstrap, I2util/configure.ac, I2util/doc/Makefile.am:
	Modified to support installing of man pages. This took an upgrade of the
	autoconf tools. Ugh.

	jeff

2004-02-16  boote  <boote@foo.local>

	* I2util/doc/aespasswd.man:
	Spell checking, and incorporating changes based on Eric's comments.

	jeff

	* I2util/doc/aespasswd.man: bwctld.c: modified error message.

	*.man:
		Added acknowledgments section for NSF grant disclaimer.

	jeff

2004-02-14  boote  <boote@foo.local>

	* I2util/doc/aespasswd.man:
	Adding the last man pages. bwctld.limits.man is not done yet, but it is
	getting close.

	jeff

2004-02-09  boote  <boote@foo.local>

	* I2util/doc/aespasswd.man:
	bwctl.c: changing so remotehost is attached to the -c/-s options

	bwctl.1: checkpoint

2004-02-08  boote  <boote@foo.local>

	* I2util/doc/aespasswd.man: Adding manpage for aespasswd.

2004-01-16  boote  <boote@foo.local>

	* owamp/endpoint.c:
	Try again... Wasn't handling negative offsets correctly.

	jeff

	* owamp/arithm64.c: found another place nano's can overflow...

	jeff

	* owamp/endpoint.c:
	Fix a bug in the new timing code. (Forgot to check if the nsec's field was
	larger than 1 sec before passing back.)

	jeff

	* owamp/endpoint.c: Attempt to fix the ntp offset problem.

	jeff

2004-01-14  boote  <boote@foo.local>

	* test/owtvec.c: fix signed/unsigned compare mistake.

	jeff

2004-01-13  boote  <boote@foo.local>

	* configure.ac: incrementing revision number for hawaii tracking.

	jeff

2003-12-19  boote  <boote@foo.local>

	* I2util/I2util/table.c:
	Hmm - things were confused. There was a length and a num_elements entry.
	fixed.

	jeff

	* I2util/I2util/table.c:
	Wow - I can't believe this wasn't an issue before. (num_elements was not
	initialized in the table init code.)

	jeff

	* I2util/aespasswd/aespasswd.c:
	Added a '.' prefix to the lockfile name.

	jeff

	* I2util/aespasswd/aespasswd.c:
	Adding an error message if the identity is not found and the -d flag
	was specified.

	jeff

	* I2util/I2util/conf.c: Fixed core-dump if the conf file is empty.

	jeff

	* I2util/I2util/conf.c, I2util/aespasswd/aespasswd.c: fixed bugs.

	jeff

	* I2util/Makefile.am, I2util/aespasswd/aespasswd.c, I2util/configure.ac:
	I2util/*:
		Adding aespasswd into autoconf files.
	I2util/aespasswd/*:
		Now works on FreeBSD - need to test Linux.
	bwctl/bwctlP.h:
		Clean-up comments.

	jeff

	* I2util/I2util/conf.c, I2util/I2util/conf.h, I2util/aespasswd/Makefile.am, I2util/aespasswd/aespasswd.c:
	I2util/conf.[ch]
		Adding a WriteKeyLine function.
	I2util/aespasswd/*
		Adding an aespasswd command for managing keyfiles.
	bwctl/bwctl.c
		Making some error messages pretty.

	jeff

2003-12-18  boote  <boote@foo.local>

	* I2util/I2util/conf.c, I2util/I2util/readpassphrase.c:
	Now compiles on Linux.

	termios suck.

	jeff

	* I2util/I2util/ErrLogSyslog.c, I2util/I2util/conf.c, I2util/I2util/errlogsyslog.h, I2util/I2util/md5.c, I2util/I2util/md5.h, I2util/I2util/readpassphrase.c, I2util/I2util/readpassphrase.h, I2util/I2util/saddr.c:
	Fixed compile errors.

	jeff

2003-12-17  boote  <boote@foo.local>

	* I2util/I2util/md5.c, I2util/I2util/md5.copyright, I2util/I2util/md5.h, I2util/I2util/readpassphrase.c, I2util/I2util/readpassphrase.h, I2util/I2util/util.h, I2util/I2util/ErrLog.c, I2util/I2util/ErrLogSyslog.c, I2util/I2util/Makefile.am, I2util/I2util/conf.c, I2util/I2util/conf.h, I2util/I2util/errlogsyslog.h, I2util/I2util/hex.c, I2util/I2util/hex.h:
	I2util:
	Added conf file handling routines, hex encode/decode, md5, readpassphrase...

	Basically lots of things that owamp and bwctl will both use.

	Modified bwctl to use the I2util versions of these functions.

	Modified bwctl to do aeskeys with either a keyfile or a passphrase.

	Modified bwctld to do aeskeys with a keyfile.

	(These changes have not even been compiled yet since I did this on my
	laptop. I will be checking in updates to this after actually testing it.)

	jeff

2003-12-08  boote  <boote@foo.local>

	* owamp/capi.c, owampd/policy.c: Remove compiler warnings.

	jeff

2003-11-17  boote  <boote@foo.local>

	* I2util/I2util/saddr.c: blah

2003-11-16  boote  <boote@foo.local>

	* I2util/I2util/saddr.c, I2util/I2util/saddr.h:
	Adding test for "loopback" to allow a test. "loopback" is implicitly
	trusted to an extent.

	jeff

2003-11-07  boote  <boote@foo.local>

	* conf/Makefile.am, conf/owampd.passwd, owampd/owampd.c, owampd/owampdP.h:
	Removed unused owampd.passwd file from owamp.

	jeff

2003-10-29  boote  <boote@foo.local>

	* owamp/endpoint.c:
	fixed a small bug that could happen if a child process somehow hung.

	Now the parent will handle that more gracefully. (This has not happened
	as far as I know...)

	jeff

2003-10-21  boote  <boote@foo.local>

	* test/owtvec.c:
	byte-swap the OWPNum64 values before hex-encoding them for output.

	jeff

2003-10-20  boote  <boote@foo.local>

	* Makefile.am, configure.ac, owamp/owamp.h, owamp/schedule.c, test/Makefile.am, test/owtvec.c:
	Adding a program to generate test vectors.

	jeff

	* I2util/I2util/saddr.h, owampd/policy.c: saddr.h:	added comment

	policy.c:	fixed bug in MSGCLAIM message decoding.

	jeff

2003-10-01  boote  <boote@foo.local>

	* owampd/policy.h, conf/owampd.limits, owamp/api.c, owamp/owamp.h, owamp/protocol.c, owamp/sapi.c:
	owampd: Changed the bandwidth limit to be bits/second instead of bytes/second.

	protocol.c: Corrected possible signal problem.

	sapi.c: corrected possible error detection problem.

	jeff

2003-09-26  boote  <boote@foo.local>

	* powstream/powstream.c, owamp/sapi.c:
	sapi.c:	modified the order of ProcessStartSession to remove a potential
		race condition.
	powstream.c:
		Added a check for interrupts to another spot to make powstream
		more responsive to interrupts during the "connect" sequence.

	jeff

2003-09-19  boote  <boote@foo.local>

	* powstream/powstream.c: Adding -r option to -h message.

	Corrected signal handling for OpenControl.

	jeff

2003-07-15  boote  <boote@foo.local>

	* configure.ac: removed unused stuff.

	jeff

	* Makefile.am, configure.ac:
	remove digest/script stuff that is no longer used.

	jeff

	* configure.ac: update to version 1.6c

	jeff

2003-07-09  boote  <boote@foo.local>

	* powstream/powstream.c:
	Corrected bug that caused lost records to be reported incorrectly.

	jeff

2003-06-15  boote  <boote@foo.local>

	* powstream/powstreamP.h: Forgot to add element to struct.

	jeff

	* owamp/api.c, powstream/powstream.c:
	I think I finally figured out the strange short read. dup doesn't give you two
	underlying file pointers - so the read was repositioning the filepointer and
	then the other process would write to the file moving the file pointer up.

	fixed this by using fopen to create another reference to the file without
	using dup.

	jeff

2003-06-14  boote  <boote@foo.local>

	* powstream/powstream.c: more diagnostics...

	* powstream/powstream.c:
	Adding fseeko to END to try and update stream to real size of file...

	jeff

	* owamp/api.c:
	Add ftello to unexpected EOF to determine how far into the file it is.

	jeff

	* powstream/powstream.c:
	corrected off_t to use %llu for printf statements.

	jeff

	* powstream/powstream.c: more diag...

	jeff

	* powstream/powstream.c: Add yet more diagnostics...

	jeff

	* powstream/powstream.c:
	resetting eof flag for shared stream in case the parent process reads to
	the end of the file before the session is complete.

	jeff

	* powstream/powstream.c: fixed 32/64 bit int mismatch.

	jeff

	* powstream/powstream.c: yet mor diagnostics...

	* owamp/api.c: typo.

	* owamp/api.c: adding more diagnostics to fread failure message.

	jeff

	* I2util/I2util/table.c, I2util/I2util/table.h, powstream/powstream.c:
	I2util/table.[ch]:
		Added a HashClean function to clean out a hash table.

	powstream.c:
		Added some diagnostics to find out why fread is failing on the
		partial session file. Also modified the Hash table to be cleaned
		on error.

	jeff

2003-06-13  boote  <boote@foo.local>

	* powstream/powstream.c, powstream/powstreamP.h:
	Fixed max/min problem. (The problem was that I forgot to implement it. Sigh.)

	jeff

2003-05-28  boote  <boote@foo.local>

	* powstream/powstream.c: Fixed bug with -b flag.

	jeff

2003-05-27  boote  <boote@foo.local>

	* powstream/Makefile.am, powstream/powstream.c, powstream/powstreamP.h:
	Added an option to powstream to make it compute summary data on the fly.

	jeff

2003-05-02  boote  <boote@foo.local>

	* owamp/sapi.c: Don't set V6 sockopts unless you have a V6 socket!

	jeff

2003-04-03  boote  <boote@foo.local>

	* owping/Makefile.am: I thought $(RM) was standard?

	jeff

	* configure.ac, owamp/sapi.c, owping/Makefile.am, owping/owdrive:
	Added install of owstats/owfetch links to owping.

	removed absolete/non-functional owdrive script.

	jeff

2003-03-28  boote  <boote@foo.local>

	* conf/owampd.conf, conf/owampd.limits, owamp/api.c, owamp/capi.c, owamp/endpoint.c, owping/owping.c, owping/owpingP.h:
	owping:
		Added a -R "raw" output option. It just dumps records out.
		Absolutely no processing what-so-ever.

	owamp:
		Small fixes. (OWPDelay had a bug - it would never return a negative
		delay...)

	jeff

2003-03-27  boote  <boote@foo.local>

	* owamp/sapi.c:
	Make sure IPV6_V6ONLY sockopt is 0 for server sock so dual-stack will work.

	jeff

2003-03-24  boote  <boote@foo.local>

	* owamp/protocol.c:
	Grr! - missing packet records are valid to write as well as read!

	jeff

2003-03-21  boote  <boote@foo.local>

	* owamp/api.c, owamp/protocol.c:
	Ugh! Yes - a "missing packet" record is a valid record.

	jeff

2003-03-20  boote  <boote@foo.local>

	* owampd/policy.c:
	Fixed another case where an IPv4 address was presented as a v6 "v4 mapped"
	address.

	jeff

	* conf/owampd.conf, owampd/policy.c: conf/owampd.conf:
	added more comments to owampd.conf

	owampd/policy.c:
	owampd will now create the datadir if it doesn't already exist.

	jeff

	* conf/owampd.limits:
	Added comments to explain the "assign" lines in the limits file.

	jeff

	* I2util/I2util/Makefile.am, I2util/I2util/io.c, I2util/I2util/io.h, I2util/I2util/random.c, I2util/I2util/saddr.c, I2util/I2util/saddr.h, I2util/I2util/table.c, I2util/I2util/table.h, conf/Makefile.am, conf/owampd.conf, conf/owampd.limits, conf/owampd.passwd, owamp/Makefile.am, owamp/access.h, owamp/access2.c, owamp/api.c, owamp/arithm64.c, owamp/arithm64.h, owamp/capi.c, owamp/conndata.h, owamp/context.c, owamp/defaults.c, owamp/endpoint.c, owamp/endpoint.h, owamp/error.c, owamp/io.c, owamp/owamp.h, owamp/owampP.h, owamp/print.c, owamp/protocol.c, owamp/read_class2limits.c, owamp/sapi.c, owamp/schedule.c, owamp/time.c, owamp/unixtime.c, owamp/util.c, owampd/Makefile.am, owampd/conf.c, owampd/conf.h, owampd/owampd.c, owampd/owampdP.h, owampd/policy.c, owampd/policy.h, owping/Makefile.am, owping/owping.c, owping/owpingP.h, powstream/Makefile.am, powstream/powstream.c, powstream/powstreamP.h, I2util/Makefile.am, INSTALL, LICENSE, Makefile.am, README, bootstrap, configure.ac:
	Merging VERS5 into head. Wahoo!!!

	jeff

2003-03-19  boote  <boote@foo.local>

	* I2util/I2util/saddr.h: fix bug. - I like descriptive comments.

	jeff

	* owamp/endpoint.c, owamp/sapi.c, I2util/I2util/saddr.c, I2util/I2util/saddr.h:
	Fixed annoying addr-check problems.

	jeff

	* I2util/I2util/saddr.c, owamp/sapi.c:
	Grr - V6/V4 duel-stack is more troublesome then one might think at first...

	Policy issues are much more difficult to deal with when trying to use
	address matching - since addresses of v4 can be encoded within v6.

	(If I'm not mistaken, I *may* have the opposite problem with v4 compatible
	v6 addresses - but I'm not even going to look at that for now.)

	jeff

2003-03-18  boote  <boote@foo.local>

	* owamp/api.c, owamp/capi.c, owamp/context.c, owamp/endpoint.c, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, owamp/sapi.c, owampd/owampd.c, owampd/policy.c, owampd/policy.h, conf/owampd.conf, conf/owampd.limits:
	checkpoint - fixes to policy and signal handling.

	(doesn't quite work at the moment. I'm having a hard time comparing V6 addresses
	that are actually V4MAPPED addresses. I need to do this because of section 7
	of the spec...) sigh.

	jeff

2003-03-17  boote  <boote@foo.local>

	* powstream/powstream.c, owamp/endpoint.c, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, owamp/sapi.c, owampd/owampd.c, owping/owping.c:
	Just fixed compile errors from laptop code changes.

	Now I'm ready to start testing. (will test on aami nodes after lunch.)

	jeff

2003-03-16  boote  <boote@foo.local>

	* owamp/api.c, owamp/capi.c, owamp/context.c, owamp/endpoint.c, owamp/owampP.h, owamp/protocol.c, owamp/sapi.c, owampd/policy.c:
	check-point. (This may not even completely compile - I edited a bunch on
	my laptop... I will test it on monday.)

	jeff

2003-03-10  boote  <boote@foo.local>

	* owampd/owampd.c, owampd/policy.c, conf/owampd.limits:
	Did some limited testing... Fixed a few dumb bugs.

	I was at least able to get a few test sessions running.

	jeff

	* owamp/capi.c, owamp/io.c, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, owamp/sapi.c, owampd/owampd.c, owampd/owampdP.h, owping/owping.c, powstream/powstream.c, I2util/I2util/io.c, I2util/I2util/io.h, I2util/I2util/table.c, I2util/I2util/table.h, conf/owampd.conf, owamp/api.c:
	Added signal handling into owampd... This was much more complicated than
	I expected. (On retrospect, I should have known better.) I had to modify
	the low-level i/o routines to return on interrupts iff I wanted them to.
	This touched LOTS of the other code. I have not been able to test it yet.

	jeff

2003-03-08  boote  <boote@foo.local>

	* owampd/policy.c, owampd/policy.h:
	Ok - I *believe* I have all policy done with the exception of writing
	a pass-phrase to aeskey hook for owping. I believe owampd policy is complete.

	Items to complete before Beta-release:
	* pass-phrase aeskey in owping
	* signal handling for owampd. (HUP/TERM catching)

	* LOTS of testing...
	* documentation, documentation, documentation...

	jeff

2003-03-07  boote  <boote@foo.local>

	* conf/owampd.conf, conf/owampd.limits, owampd/policy.c, owampd/policy.h:
	check-point.

	jeff

	* conf/owampd.limits: New file.

	* conf/owampd.limits, owampd/owampd.c, owampd/policy.c, owampd/policy.h:
	check-point - fixed some run-time bugs and added comments for owampd.limits
	 file.

2003-03-06  boote  <boote@foo.local>

	* I2util/I2util/saddr.c, I2util/I2util/saddr.h, I2util/I2util/table.c, owamp/api.c, owamp/capi.c, owamp/context.c, owamp/endpoint.c, owamp/error.c, owamp/owamp.h, owamp/owampP.h, owamp/print.c, owamp/read_class2limits.c, owamp/sapi.c, owampd/owampd.c, owampd/owampdP.h, owampd/policy.c, owampd/policy.h, powstream/powstream.c:
	I2Util:
	saddr.*
		moved some #includes from the .c to the .h so sockaddr_t would be
		defined for the args to the saddr function prototype.

	table.c
		corrected a "break" to the iterate loop. (I recently modified this
		function to allow "deletes" to occur during an iteration - but forgot
		to break out of this loop instead of returning, so some cleanup
		work was not happening if the iteration was terminated early.

	owamp:
		added the TestComplete policy hook function. This was needed to
		release resources upon the completion of a test.
		(policy sucks)
		Policy also required changes to the CloseFile hook so differences
		in real filesize from the resource request could be accounted for.
		(It is necessary to do this so that delete_on_fetch can delete
		files and release the resources from the global state. If this
		accounting wasn't done - delete_on_fetch would be freeing the resource
		based on the real filesize - but the accounting would be based upon
		the original request. This would eventually cause test sessions to
		be denied when there is actually space.)

		moved all "default" policy functions over to owampd where they
		belong. (I will need to add a policy function into owping to allow
		a pass-phrase generated aeskey.)

	owampd:
		Added lots of policy. (The are more lines of policy code, than original
		owampd code. Ugh.)

		The current state is that messages are happening between the parent
		resource broker, and the actual child processes that are handling
		the requests - and the datastructures are in place for the resource
		broker to keep track. But - the actual accounting is not happening
		yet. I don't expect this to take more than an hour or two more to
		add. I also still need to add the code to initialize the disk-usage
		accounting. This is a little more tricky, although I believe I can
		use du.c code from FreeBSD as an example.

	jeff

2003-02-28  boote  <boote@foo.local>

	* owampd/conf.c, owampd/conf.h, owampd/policy.c, owampd/policy.h:
	New file.

	* owamp/Makefile.am, owamp/access.h, owamp/access2.c, owamp/context.c, owamp/endpoint.c, owamp/owamp.h, owamp/policy.c, owamp/policy.h, owamp/sapi.c, owampd/Makefile.am, owampd/conf.c, owampd/conf.h, owampd/owampd.c, owampd/owampdP.h, owampd/policy.c, owampd/policy.h, owping/owping.c:
	checkpoint - mostly compiles. (everything but powstream.)

	Almost have global policy done in owampd.

	jeff

2003-02-27  boote  <boote@foo.local>

	* owamp/Makefile.am, owamp/access.h, owamp/access2.c, owamp/capi.c, owamp/owamp.h, owamp/owampP.h, owamp/policy.c, owamp/policy.h, owamp/read_class2limits.c, owamp/sapi.c, owampd/owampd.c, owampd/owampdP.h, I2util/I2util/table.h:
	checkpoint - will not completely compile right now.

	jeff

2003-02-18  boote  <boote@foo.local>

	* powstream/powstream.c: Corrected OWPNum arithmatic.

	jeff

	* owamp/api.c: style changes...

	jeff

	* LICENSE: Adding license file. minor fix for scripts Makefile.

	jeff

	* LICENSE: New file.

2003-02-10  boote  <boote@foo.local>

	* INSTALL, README: Add a bit more text...

	jeff

2003-02-07  boote  <boote@foo.local>

	* I2util/Makefile.am, Makefile.am, configure.ac: prepare alpha

	* I2util/I2util/Makefile.am, Makefile.am, owamp/Makefile.am:
	prepare for alpha.

	jeff

	* INSTALL, conf/Makefile.am: New file.

	* INSTALL, conf/Makefile.am: preparing for alpha.

	jeff

	* conf/class2limits.conf, conf/ip2class.conf, conf/owampd.conf, conf/owampd.passwd, conf/passwd.conf:
	New file.

	* I2util/I2util/Makefile.am, I2util/Makefile.am, Makefile.am, README, bootstrap, conf/class2limits.conf, conf/ip2class.conf, conf/owampd.conf, conf/owampd.passwd, conf/passwd.conf, configure.ac, owampd/Makefile.am:
	Preparing for Alpha release.

	jeff

2003-02-05  boote  <boote@foo.local>

	* configure.ac: Try using RCS version string...

	jeff

2003-01-29  boote  <boote@foo.local>

	* owamp/api.c, owamp/context.c: Linux fixes...

	* owping/owping.c, owamp/endpoint.c: endpoint.c:
		comment the "fudge" factor a bit better.

	owping.c:
		comment start_time estimate better.

	scripts/*:
		modified owd file readers to understand version 1 AND 2 files.

	jeff

	* owping/owping.c: Oops - debug stuff was checked in before.

	jeff

	* I2util/I2util/table.c, I2util/I2util/table.h, owamp/api.c, owamp/endpoint.c, owamp/owamp.h, owamp/owampP.h, owamp/time.c, owamp/unixtime.c, owping/owping.c, powstream/powstream.c, Makefile.am:
	table.[ch]:
		Modified so hash datarecords (I2Binding) are pre-allocated for the
		most part. This was needed to more efficiently implement the lost packet
		buffering in the owamp reciever.

	owamp/*:
		Renamed OWPCvt functions to adhere to other naming schemes.

		BIG CHANGE:
			Removed the schedule arrays. They are now completely
			computed on the fly.

	owdigest:
		Modified it to use a double to save the "err".

		ported different context record model.

	scripts:
		Modified to read owd files with "double" format precision in the
		header for "err". (not yet tested.)

2003-01-26  boote  <boote@foo.local>

	* owamp/api.c, owamp/arithm64.c, owamp/capi.c, owamp/endpoint.c, owamp/owamp.h, owamp/owampP.h, owamp/sapi.c, owamp/schedule.c, owamp/time.c, owping/owping.c, powstream/powstream.c, powstream/powstreamP.h:
	renamed OWPnum64 to OWPNum64 so it complies with the naming scheme.

	removed all precomputed schedule generation from everywhere with the
	exception of the receiver code itself. So... only the hard part is left. :)

	This really isn't too bad with the exception of the fact that the logic
	for determining the end of the test needs to be reworked again. And... if
	we want to maintain the buffering that we have tried to setup, it means I
	will need to update the "itimer" throughout the test so I ensure that the
	process wakes up periodically to output lost packets even if no packets are
	received in the meantime to wake the process up. I believe I have this
	worked out in my head fairly well at this point, so it should just take
	a few hours of coding.

2003-01-24  boote  <boote@foo.local>

	* owamp/schedule.c, owamp/time.c, owampd/owampd.c, owping/owping.c, I2util/I2util/table.c, configure.ac, owamp/access.h, owamp/api.c, owamp/capi.c, owamp/endpoint.c, owamp/owamp.h, owamp/policy.c, owamp/policy.h, owamp/protocol.c, owamp/sapi.c:
	I2util/table.c:
		corrected memory error. (was still free'ing something I intended
		only to mark as ready to be deleted.)

	access.*:
		Made new type records names that agree with the rest of the code.
		None of the access stuff is actually being compiled in yet. And
		won't be until after Jt Techs.

	policy.*:
		Made hooks for all the new policy functions. OpenFile/CloseFile
		and childwait stuff is all working now.
		owfetch even works now! :)

	owamp/(the rest):
		Fixed lots of small bugs. Mostly of the data-initialization type.

2003-01-22  boote  <boote@foo.local>

	* Makefile.am, configure.ac, owamp/arithm64.c, owamp/endpoint.c, owamp/protocol.c, owamp/sapi.c, owampd/Makefile.am, owampd/owampd.c, owping/Makefile.am, owping/owping.c, powstream/Makefile.am:
	Ok - all apps now compile with the exception of owdigest. (Not sure what to
	do about "prec" in that one yet so I'm going to think on it before going
	after that one.)

	However... Nothing really works yet. There are many problems I still need
	to debug. At the moment TestSessionAccept messages are not going accross
	the wire properly, and I'm sure there are more problems. I even found a place
	I had forgotten to byte-swap the port numbers. The only reason this worked
	in the last version is that I forgot on both the client and server, and
	I guess we never tested between big-endien/little-endien systems. (ugh.)

	I have now added a --with-efence option to configure to make it easier to
	link with libefence to debug memory problems.

	jeff

2003-01-21  boote  <boote@foo.local>

	* owamp/api.c, owamp/arithm64.c, owamp/arithm64.h, owamp/context.c, owamp/owamp.h, owamp/policy.c, owamp/schedule.c, owamp/time.c:
	put OWPNum64Mult back in, and searched for all OWPnum64 arithmatic.

	(Rewrote OWPNum64Add as a macro.)

	Made the schedule/random64 number generator update the counter for every
	random number fetch, and only call AES every forth time as it was in the
	past.

	Corrected the OWPDefClosefile function so it removes the file_info state
	record from the cntrl hash. (This would have caused a memory leak.)

	The OWPDefOpenFile and OWPDefCloseFile functions are extremely simple for now,
	in the future they will be used to implement the del_on_fetch/del_on_close
	functionality. (They do understand the pathnames and this is the way I
	removed the conndata structure.)

	jeff

2003-01-21  karp  <karp@foo.local>

	* exp-spec.txt:
	An extensive rewrite. Attempted to incorporate Jeff's remarks on the
	first draft.

2003-01-21  boote  <boote@foo.local>

	* owamp/Makefile.am, owamp/access.h, owamp/api.c, owamp/arithm64.c, owamp/capi.c, owamp/conndata.h, owamp/context.c, owamp/defaults.c, owamp/defaults.h, owamp/endpoint.c, owamp/owamp.h, owamp/owampP.h, owamp/policy.c, owamp/policy.h, owamp/protocol.c, owamp/sapi.c, owamp/schedule.c, owamp/time.c, powstream/powstream.c, powstream/powstreamP.h:
	Lots of cleanup. Lots of fixed "features". The policy functionality is
	pretty well hashed out - although I have not fixed the code in access*.[ch]
	to work correctly yet.

	I have started to remove the dependence on the pre-computed schedule. powstream
	no longer depends upon this. However, the endpoint sender/receiver code
	has not been modified yet.

	powstream currently compiles but owampd/owping do not.

	Tomorrow I will work on getting owampd/owping working with all the current
	changes. And once that works, I will work on removing the pre-computed
	schedules.

	jeff

	* owamp/policy.c, owamp/policy.h, owamp/schedule.c: New file.

2003-01-14  boote  <boote@foo.local>

	* owamp/arithm64.h, owamp/capi.c, owamp/endpoint.c, owamp/endpoint.h, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, owamp/sapi.c, owamp/time.c, owamp/Makefile.am, owamp/api.c, owamp/arithm64.c:
	libowamp.a finally compiles - none of the apps do yet, so obviously this
	has not been tested yet. And I have a bit more work to do in endpoint.c
	to clean up. And that is before modifying it to compute the schedule on
	the fly.

	jeff

2003-01-12  boote  <boote@foo.local>

	* owamp/owampP.h, owamp/protocol.c, owamp/read_class2limits.c, owamp/sapi.c, owamp/util.c, owamp/Makefile.am, owamp/access.h, owamp/access2.c, owamp/api.c, owamp/capi.c, owamp/context.c, owamp/defaults.c, owamp/defaults.h, owamp/endpoint.c, owamp/error.c, owamp/io.c, owamp/owamp.h:
	Cleaned up the policy interface. However, the actual policy functions need
	a lot of work to clean them up. Especially since I modified the I2util library
	hash functions. For now I have just disabled all policy stuff. The hook
	functions are still in defaults.c - I have added defaults.h to declare them.

	The only thing left to re-enable this as a working version (minus policy) is
	to complete the changes in endpoint.c to fix the udp protocol and to make
	it use the new interface for opening files/and or getting path names.

	Then the app codes will need to be modified as well. (still close to a week
	of work I would estimate.)

	jeff

	* owamp/defaults.h: New file.

2003-01-10  boote  <boote@foo.local>

	* owamp/api.c, owamp/capi.c, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, owamp/sapi.c, I2util/I2util/random.c, I2util/I2util/table.c, I2util/I2util/table.h:
	random.c: simplified.

	table.*: Changed datum to a non-pointer type. The way this was setup it
		was almost impossible not to have memory problems.

	owamp/*: All the control protocol functions should now be upgraded to
		v5 - although the complete library does not complile yet, and the
		apps need to be changed still too.

	jeff

2003-01-04  boote  <boote@foo.local>

	* owamp/api.c, owamp/arithm64.c, owamp/arithm64.h, owamp/capi.c, owamp/conndata.h, owamp/context.c, owamp/endpoint.c, owamp/io.c, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, owamp/sapi.c, owamp/time.c, owamp/unixtime.c, owampd/owampd.c, owampd/owampdP.h, owping/owping.c, owping/owpingP.h, powstream/powstream.c, powstream/powstreamP.h:
	This is a couple of days work toward v5 compliance. It doesn't even currently
	compile all the way, but there is getting to be way too many changes for
	me to feel comfortable without checking in.

	Therefore, I'm putting this in a new branch of development I'm calling
	VERS5.

	Tolya - if you want to see what I've been doing, you will need to use
	the co/update -r flag to see this branch.

	(You can also just see the differences using "cvs diff -r HEAD -r VERS5" or
	something along those lines... I have not used that in a while.)

	jeff

2002-12-09  karp  <karp@foo.local>

	* exp-spec.txt: First cut at the exponential RNG part of the spec.

	* exp-vector/Makefile, exp-vector/boxes-ref.dat, exp-vector/rijndael-alg-ref.c, exp-vector/rijndael-alg-ref.h, exp-vector/rijndael-api-ref.c, exp-vector/rijndael-api-ref.h, exp-vector/table.128, exp-vector/table.192, exp-vector/table.256, exp-vector/vector.c:
	Program 'vector' computes a million members of the
	exponential sequence with a fixed seed, and prints out
	the last one.  It can be used by future implementors of
	OWAMP to verify correctness of the exponential RNG.

2002-11-27  owamp  <owamp@foo.local>

	* owamp/sapi.c:
	Oops - accidentily checked in a debugging error message yesterday.

	jeff

2002-11-26  boote  <boote@foo.local>

	* configure.ac, owamp/protocol.c, owamp/sapi.c:
	Adding check for sa_len. FreeBSD getaddrinfo/getnameinfo functions don't work
	properly if you don't set this value, even though it is a non-standard
	sockaddr member. Sigh.

	(This *might* be the cause of the "bind" errors, but I'm not sure yet.)

	jeff

	* owamp/api.c, owamp/capi.c, owamp/sapi.c: added gai error messages.

	jeff

	* owping/owping.c, I2util/I2util/Makefile.am, I2util/I2util/saddr.c, I2util/I2util/saddr.h, I2util/I2util/util.h, owamp/endpoint.c, owamp/sapi.c:
	Adding more detailed error reporting - removing "connect" of recv udp socket.
	Added socket compare function into I2Util.

	jeff

	* owamp/api.c, owamp/protocol.c: Corrected error reporting...

	jeff

	* owamp/protocol.c: Improve error reporting.

	jeff

2002-11-08  boote  <boote@foo.local>

	* owamp/access2.c, owamp/sapi.c:
	Now it will even compile back on freebsd...

2002-11-08  owamp  <owamp@foo.local>

	* configure.ac, owamp/owamp.h: fix for linux fseeko brain-damage...

	jeff

	* configure.ac, owamp/access.h, owamp/access.h.in, owamp/access2.c, owamp/api.c, owamp/arithm64.c, owamp/defaults.c, owamp/endpoint.c, owamp/owamp.h, owamp/print.c, owamp/read_class2limits.c, owamp/time.c, owampd/owampd.c, owping/owping.c, powstream/powstream.c:
	Port back to linux again... Ugh, you wouldn't think you would have to touch
	so many files.

	jeff

2002-11-07  owamp  <owamp@foo.local>

	* I2util/I2util/ErrLogSyslog.c:
	Fixed a bug in how syslog.h was included.

	jeff

2002-11-07  boote  <boote@foo.local>

	* powstream/powstream.c, powstream/powstreamP.h:
	Added syslog facility option.

	Added -r (LOG_PERROR) option too.

	jeff

	* owampd/owampd.c, owampd/owampdP.h: Added setuid functionality.

	Added syslog facility option.

	Added a config file.

	Hmm. sounds so simple when you put it that way.

	jeff

	* owamp/api.c, owamp/endpoint.c, owamp/io.c: api.c:
		Added sigaction to ignore SIGPIPE to ContextInitialize().

	endpoint.c:
		Modified error messages to put a space after the ':' as per
		one of Stas's rare bugs.

		modified send->sendto so that ICMP errors can not disconnect our
		sockect.

		Explicitly added an ignore of SIGPIPE for the child procs.

		Better error handling in EndpointInitHook - actually kills of
		child proc if necessary.

	io.c:
		Removed redundant I2Readn/I2Writen functions. These are in the
		I2Util library and should NOT be here.

		Corrected ReceiveBlocks function to handle short reads.

	jeff

2002-11-06  boote  <boote@foo.local>

	* owamp/endpoint.c, owamp/sapi.c:
	Fixed errors that occured during failure conditions. i.e. If the endpoint
	can't Initialize, the control socket should not be closed!

	jeff

2002-11-05  boote  <boote@foo.local>

	* I2util/I2util/ErrLogSyslog.c, I2util/I2util/errlogsyslog.h, I2util/config/c-syslog-names.m4, I2util/configure.ac:
	Added functionality to specify syslog facilities/priorities by name.

	jeff

2002-10-28  boote  <boote@foo.local>

	* owampd/owampd.c: owampd now uses syslog.

	jeff

2002-10-25  boote  <boote@foo.local>

	* powstream/powstream.c:
	Reworked the sig stuff yet again... It is "a little" more simple now.

	powmaster now sends a HUP to powstream's that need to reinitialize their test
	due to another node restarting.

	powstream.c had a bug in that it didn't properly check the "status" of all
	the recv children.

	jeff

2002-10-25  karp  <karp@foo.local>

	* configure.ac: Added scripts/OWP/Makefile

2002-10-24  boote  <boote@foo.local>

	* owamp/api.c, owamp/owamp.h:
	Fixed a problem with send/recv children being zombied.

	jeff

2002-10-22  boote  <boote@foo.local>

	* owampd/owampd.c:
	Modified format of owampd.info file to contain both the pid and the
	starttime. This way scripts can be sure the starttime is for the given
	pid - owampd creates the file with an atomic "rename" operation.

	The previous method introduced a race condition.

	jeff

2002-10-18  karp  <karp@foo.local>

	* Makefile.am, configure.ac:
	Added support for scripts directory Makefile

2002-10-16  karp  <karp@foo.local>

	* owping/owping.c: Fixed losThre default to be 10

	* owampd/owampd.c:
	Converted command-line options to match the style of owping.

2002-10-10  boote  <boote@foo.local>

	* owamp/endpoint.c, owamp/owamp.h:
	checkpointing mostly... long weekend.

	endpoint.c:	removed some debugging print statements to fix some
			of Stas's "rare bugs".

	owamp.h:	changed the default port.

	all the scripts...
		Added stuff that isn't complete yet...

	jeff

2002-10-05  boote  <boote@foo.local>

	* owamp/capi.c, powstream/powstream.c: owamp/capi.c:
		Fixed a bug. Error condition was reported fatal, when it should
		have been able to continue. (It wasn't looping through all possible
		addrinfo structs to find a match because of this. It was failing
		on the first bad one.)

	powmaster.pl:
		Better signal handling.
		fixed a bug (array passed in first value instead of array ref
			for the mkpath command.)
		fixed another bug... Needed to "dup" the write side of the pipe
			to ensure all powstreams can write to it.
	Conf.pm:
		Removed DEBUG/VERBOSE from the defaults. (undef should be the default
		value - putting them here made 0 the default...)

	jeff

2002-10-04  boote  <boote@foo.local>

	* powstream/powstream.c, powstream/powstreamP.h: powstream:
		Added -p option: causes it to print the filenames it creates
		on stdout.
	owmesh.conf:
		Added DevNull
	Conf.pm:
		Fixed undefined var problem.
	powmaster.pl:
		Script to "manage" all powstream receivers on a node.

	jeff

2002-10-03  boote  <boote@foo.local>

	* powstream/powstream.c:
	powsteam: added powstream specific cmdline args to usage().

	owmesh.conf: Oops - I had commented something out in the pervious version
			that was needed.

	jeff

	* powstream/powstream.c, powstream/powstreamP.h:
	Tolya - I reset a bunch of the parameters to more "global" defaults. If
	you want them to keep their current values for you, you need to start
	using the OWPCONF env var to set another config file that will be read
	after the default one. (Let me know if you want to see mine to give
	you an idea of what I mean.)

	Also - take a look at the new must_get_val method for Conf  - it will
	automatically die and report an error if the ATTR can't be retrieved.

	powstream:
		Made the "real" session file use tempfile functionality to
		create filenames. (This makes debugging easier if I remove the
		unlink temporarily.)
	owmesh.conf:
		Made many of the config params closer to what they will "really" be.
	Conf.pm:
		Added a "must_get_val" method that "die's" if the ATTR can't
		be retrieved.

	* README, design/decisions:
	Added descriptions in README for a few directories.

	decisions:
		Removed decisions we later changed our minds on.

	jeff

2002-09-30  boote  <boote@foo.local>

	* owamp/endpoint.c, powstream/powstream.c: endpoint.c:
		Removed a nasty racecondition that was caused by my misunderstanding
		of how sigprocmask worked. I thought it would block even signals
		that were currently set to sig_ign, but I was wrong. Because of this
		I had to rearrange how the child sig_handlers were installed.
		(Basically, I had to install them in the parent, block the signals,
		then fork. After the fork, I reset the parents original handlers,
		and unblock the signals. The child unblocks signals and runs with
		the new sighandlers already installed by the parent.)

	powstream.c:
		Added sig checking in the loop that tries to reestablish connection
		if the control connection is broken.

	jeff

2002-09-23  boote  <boote@foo.local>

	* powstream/powstream.c:
	Added signal handling - SIGHUP now causes it to re-init control connections,
	TERM and INT cause it to close the connections and exit.

	jeff

	* README: Added comments to test cvs.

	jeff

2002-09-23  karp  <karp@foo.local>

	* owamp/defaults.c, owamp/sapi.c, owamp/util.c, I2util/I2util/Options.c, I2util/I2util/table.c:
	Cosmetic changes (tiny).

2002-09-21  karp  <karp@foo.local>

	* owamp/access2.c:
	Fixed a most evil bug - it only presented itself on linux and,
	to this point I still can't see why I what I had before didn't work
	(errors ranged from core dump to 'Bad mask' messages)
	Anyway, a couple of small changes fixed it - and the code looks
	slightly better too.

2002-09-20  boote  <boote@foo.local>

	* powstream/powstream.c: output lost packets.

	jeff

	* owamp/endpoint.c, owamp/time.c, owping/owping.c, powstream/powstream.c, powstream/powstreamP.h, owamp/capi.c:
	Modified to use high 3 order bytes of frac_sec(32) instead of low order
	bytes. Hopefully things are consistant now.

	(Inconsistant use of this was causing packets to be sent before the start
	time.)

	also fixed a race condition in endpoint that happened if the endpoint proc
	happen to exit after its status was queried, but before it was killed.

	modified owping/owstats -V printout to use OWP_TSTAMPFMT.

	(temporarily removed file-locking from powstream because restarts in
	gdb don't free the locks. VERY ANNOYING!)

	jeff

	* powstream/powstream.c: new powstream basically works.

	I need to add event handling. (cleanup on SIGINT,HUP,TERM)

	jeff

2002-09-19  boote  <boote@foo.local>

	* owamp/api.c, powstream/powstream.c, powstream/powstreamP.h:
	powstream compiles - but I have not tested at all yet. Gotta go, and wanted
	to have this check-pointed before taking off.

	jeff

2002-09-19  karp  <karp@foo.local>

	* owampd/owampd.c, powstream/powstream.c, powstream/powstreamP.h, owamp/owamp.h:
	Moved commonly used macros to owamp.h.

	Have owampd write its pid and starttime to opts.confdir/owampd.pid
	and opts.confdir/owampd.info respectively.

	owampd keep read lock on owampd.pid to prevent a new incarnation
	of owampd from messing either file up.

	--Tolya

2002-09-19  boote  <boote@foo.local>

	* owping/owping.c: Changed to use new ParseRecords interface.

	jeff

	* owamp/api.c, owamp/endpoint.c, owamp/owamp.h, owamp/owampP.h:
	made ParseRecords slightly more upgradable since it will understand file
	versions to some extent now. (It now takes a OWPDataHeader structure as
	an arg.)

	modified recv process significantly:
		- Will keep socket open until lossThresh after last packet to
		ensure that it gets good data on duplicates.
		- Removed optimization that ended test early if possible. This will
		not be a problem with v5 since the owping application will set
		a very small lossThresh by default.
		- Moved the relinking of .i files to StopSession function. This
		ensures the file only gets renamed if the session was accepted.
		(we were not compliant with the spec before.)

	jeff

2002-09-18  boote  <boote@foo.local>

	* owping/owping.c, owamp/capi.c, owamp/endpoint.c, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, owamp/sapi.c, owamp/api.c:
	Modified owp file read/write functions to actually do something useful.

	jeff

2002-09-17  karp  <karp@foo.local>

	* configure.ac: Added mergesort/qsort work-around

	* owamp/owamp.h, owamp/time.c, owping/owping.c:
	Moved owp_bits2prec(), and added

	double
	OWPPrecision(OWPDataRecPtr rec);

	u_int8_t
	OWPGetPrecBits(OWPDataRecPtr rec);

	into the library - applications can use them but need not know
	how they are implemented (implmentation will change when we move
	to new precision format)

	Added precision handling to owdigest.

	* Makefile.am, configure.ac: Add owdigest to source list.

2002-09-12  boote  <boote@foo.local>

	* owping/owping.c, powstream/powstream.c, powstream/powstreamP.h, owamp/api.c, owamp/capi.c, owamp/owamp.h:
	First functioning version of powstream. Not yet validated - but it creates data
	that looks fairly convincing at first glance.

	Need better signal handling. (delete files on SIGINT, etc...)

	api.c:
		Added OWPSessionDuration - returns duration of a current test
		session given the SID.
	capi.c:
		Added timing info for delay_bound. Before it was only computed
		for the server side.
		Slightly modified OWPSessionRequest to give a little bit better
		information on why a test request failed. (It should perhaps be
		improved. See the TODO in the owamp.h header file.)
	owamp.h:
		declarations for above changes.
	owping.c:
		added error checking for progname. (I make the symlink the wrong
		name, and it got very confused, so I added this.)

	powstream.c:
		kinda works.

	jeff

2002-09-11  boote  <boote@foo.local>

	* owamp/owamp.h, powstream/Makefile.am, powstream/powstream.c, powstream/powstreamP.h, owamp/api.c, owamp/arithm64.c, owamp/arithm64.h, owamp/endpoint.c:
	Initial version of powstream. Doesn't work yet, but I wanted to check-point
	my work.

	jeff

2002-09-09  boote  <boote@foo.local>

	* Makefile.am, configure.ac, owamp/conndata.h, owamp/defaults.c, owamp/endpoint.c, owamp/io.c, owamp/owamp.h, owampd/owampd.c, owping/owping.c:
	Adding initial version of powstream. It does not work yet, but it will compile.

	I also removed some things from conndata.

	jeff

2002-09-09  karp  <karp@foo.local>

	* owping/owping.c:
	Fixed lost stats calculation and added precision in summary
	report. Precision is computed as the worst precision among
	individual packets - this is conservatively safe, but unfortunately
	one bad packet can now an create unduly bad impression.

2002-09-09  boote  <boote@foo.local>

	* owping/owping.c: Fixed template for mkstemp. (Linux requires 6 X's.)

	jeff

	* owamp/endpoint.c, owping/owping.c: endpoint.c:
		removed compiler warning.

	owping.c:
		fixed usage format strings.

	jeff

2002-09-07  karp  <karp@foo.local>

	* owping/owping.c: Improved reporting of lost packets

	* owping/owping.c: Fixed owstats to read the header.

2002-09-06  boote  <boote@foo.local>

	* owping/Makefile.am, owping/localnode.c, owping/localnode.h, owping/owping.c:
	removed localnode stuff.
	fd's to fp's.
	Added "w" option in for debugging.

	jeff

	* owampd/owampd.c: context changes.

	* owamp/api.c, owamp/capi.c, owamp/context.c, owamp/endpoint.c, owamp/endpoint.h, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, owamp/sapi.c, owamp/time.c:
	MANY changes. Mostly cleanup, but it ended up touching lots of files.

	api.c:
		- Removed stuff from the ContextRecord.
		- Added schedule into tsession.
		- Created function for creating a SID so server/client could do it
		the same way.
		- Cleaned up the FileHeader stuff and made is all use buffered i/o.
		- Renamed FetchLocalRecords to ParseRecords and now uses buffered i/o.
	capi.c:
		- Changed the ordering of EndpointInit stuff some so that the
		schedule can be computed before the CheckTestSession Policy
		function is called. (more important for v5, but I needed the
		schedule stuff for powstream.)
		- Combined FetchSessionInfo/FetchSessionRecords into a single function
		called FetchSession - and it uses buffered i/o.
	context.c:
		- Added tsession to Endpoint functions.
		- Changed fd's to fp's.
		- Removed ctx->func_ptr indirections.
	endpoint.c:
		- fd's to fp's.
		- DataFile(read/write)
		- tsession addition
		- moved SID creation out.
		- moved rand exponent generation out.
	*.h:
		- interface changes for above.

	jeff

2002-09-04  karp  <karp@foo.local>

	* owping/owping.c: Write data header (version 0)

	* owamp/api.c, owamp/capi.c, owamp/context.c, owamp/endpoint.c, owamp/endpoint.h, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, owamp/sapi.c:
	The scary thing is, I had to change 10 files to take care
	of this header business (all scenarios: receiver, and both
	sides of Fetch). I believe most/all of them were necessary.

	Added function

	+/*
	** Write header to the data file.
	** XXX - for now just works for TestSpecPoissson. Assumes that <buf>
	** has at least 96 bytes (fixed-size of Poisson Session Request).
	*/
	void
	OWPEncodeDataHeader(OWPTestSpec	*test_spec,
			   u_int8_t version,
			   OWPBoolean server_conf_sender,
			   OWPBoolean server_conf_receiver,
			   struct sockaddr *sender,
			   struct sockaddr *receiver,
			   OWPSID		sid,
			   u_int8_t *buf)

	is called by Receiver (and will be called by Fetch client in version 5)

	Added a quick version (no error checks for fwrite's) of:

	/*
	** Write data header to the file. <len> is the length of the buffer -
	** any other fields have to be accounted for separately in the
	** header length value.
	*/
	+void
	+OWPWriteDataHeadeR(FILE *fp, u_int32_t version, u_int8_t *buf, u_int32_t len)

	Added 2 more args to OWPDefEndpointInitHook:

		OWPBoolean      send,
		OWPAddr         localaddr

	(but this will be unnecessary once a full Session Request is
	passed)

	Adjusted include files and calls to it everywhere to match the new interface.

	fixed sapi.c to deal with the new header

	owping doesn't write the header anymore.

	--Tolya

2002-09-03  karp  <karp@foo.local>

	* owping/owdrive: Initial import.

	A Perl script to run through the data files and print records -
	some variation may be useful for OWAMP deployment on Abilene.

	--Tolya

	* owamp/capi.c, owamp/owamp.h, owping/owping.c:
	Added handling of lost records.

2002-08-30  boote  <boote@foo.local>

	* owping/owping.c, owamp/api.c, owamp/capi.c, owamp/endpoint.c, owamp/owamp.h, owamp/owampP.h, owamp/sapi.c:
	api.c:
		modified some memory allocation to use calloc instead of malloc
		for memory initialization.

		Added a rough rtt delay-bound estimate for dynamically coming
		up with reasonable defaults for start times, and end of test
		expectations.

	endpoint.c:
		modified memory allocations.

		modified recv process to optimize the end-of-test.

		modified recv process to write "lost packets" into the file.

		modified the recv process to actually make all the checks it is
		supposed to when deciding if a packet is valid.

	owamp.h:
		added some ugly timeval/timespec macros. Ok, deep down, I must really
		love macro-land...

	owampP.h:
		added delay_bound to cntrl record.

	sapi.c:
		added delay estimate.

	owping.c:
		Added from -> to into statistics banner.

		made default lossThreshold dynamic based upon rtt bound estimate.

		removed perror calls.

		fixed the -V option so it would work.

		made the start time depend upon the rtt bound estimate.


	jeff

2002-08-30  karp  <karp@foo.local>

	* owping/owping.c, owping/owpingP.h:
	Added error-checks for command-line options.

	* owping/owping.c: Dynamically create getopt string.

2002-08-29  karp  <karp@foo.local>

	* owping/owping.c: usage() now works with owping/owstats/owfetch

	* owping/owpingP.h, owping/owping.c:
	Implemented owping/owstats/owfetch. Will do more error checks/sanity
	checks for command line args.

	Re-did buckets set-up for percentile computation after a thorough
	discussion with Stas (previous version ignored negative delay
	values)

	--Tolya

	* owping/owping.c, owping/owpingP.h:
	Added a skeleton usage() - will rework it further, though.

	Added function
	/*
	** Fetch a session with the given <sid> from the remote server.
	** It is assumed that control connection has been opened already.
	*/
	void
	owp_fetch_sid(
		      char *savefile,
		      OWPControl cntrl,
		      OWPSID sid,
		      fetch_state_ptr statep,
		      char *local,
		      char *remote
		      )

	- currently used by regular owping (when client == sender)
	but can be easily used by  owfetch. Further refactoring
	is possible and may well happen in fact.

	Currently it's not very clear how to handle the fetch
	of multiple SIDs within a single control session
	(since we have to allow for them to be saved I don't see
	how the command-line can even be parsed in this case).
	If this can be arranged then it's enough to simply
	call owp_fetch_sid() multiple times.

2002-08-27  karp  <karp@foo.local>

	* owamp/capi.c, owamp/endpoint.c, owamp/owamp.h, owping/Makefile.am, owping/owping.c, owping/owpingP.h:
	Reimplemented command-line options using getopt().

	Plugged in the use of file descriptors into owping.

2002-08-27  boote  <boote@foo.local>

	* owping/owping.c: Corrected scale of prec value.

	jeff

2002-08-26  boote  <boote@foo.local>

	* owamp/api.c: Corrected sockaddr length determination.

	jeff

	* owamp/capi.c, owamp/context.c, owamp/endpoint.c, owamp/endpoint.h, owamp/owamp.h, owamp/owampP.h, owamp/sapi.c, owping/owping.c:
	Renamed AddrByLocalControl to OWPAddrByLocalControl.

	Added fd's to library calls that create test sessions. Will add option to
	use them into owping tomorrow morning.

	owping: changed arg to OWP_LOOP to remove the unsigned <= 0 test.

	jeff

2002-08-23  karp  <karp@foo.local>

	* owamp/api.c, owamp/capi.c, owamp/owamp.h, owamp/owampP.h, owamp/print.c, owping/owping.c:
	Added print-out for endpoints of test-sessions.
	Lines of the form

	--- owping test session from *** to *** ---

	are inserted after every 32 records
	(the stars are replaced by the actual node name(s) if known)

2002-08-23  boote  <boote@foo.local>

	* owping/owping.c: Changed order of args so -readfile will work.

	jeff

	* owping/owping.c, owping/owpingP.h:
	Added -from and -to command line options. Both is now the default.

	Tolya - I added some really ugly prints around the session printouts so
	you can see which is the "to" and which is the "from". Something else
	would be MUCH better, but I don't want to look at it right now - I just
	added something quick so you can see it.

	To do anything better it will probably need to be integrated into your
	printing stuff. I'm thinking something that uses some kind of
	addr->addr format string in it would be really cool. Think about it.

	jeff

2002-08-22  karp  <karp@foo.local>

	* owping/owping.c, owping/owpingP.h:
	Added "-percentile" option. Takes argument between 0 and 100 (float)

2002-08-22  boote  <boote@foo.local>

	* owamp/capi.c, owamp/endpoint.c, owamp/owamp.h, owamp/util.c:
	fixed some bugs in endpoint's time distribution calculation code:
		* recv didn't have sid
		* computed lasttime as an offset from current time instead of
			starttime like it should have for recv.

	jeff

2002-08-22  karp  <karp@foo.local>

	* owping/owping.c: Tiny - fixed loss percentage error.

	* owping/owping.c: Fixed formatting and alignment for -full option.

	* owping/owping.c, owping/owpingP.h:
	Implemented Stas's N-reordering metric.

	I do get a little compiler warning which I cannot explain at all:


	owping.c: In function `do_single_record':
	owping.c:568: warning: comparison of unsigned expression >= 0 is always true


	Also implemented "-readfrom" option. I didn't call it "-sessionfile"
	since I still plan sooner or later doing a twin option "-writeto".

	NOTE: by default "-keepdata" is turned off. However it gets turned ON
	when used with "-readfrom" (I think this is sensible)

2002-08-21  karp  <karp@foo.local>

	* owping/owping.c, owping/owpingP.h: Added percentiles computations.

	* owping/owping.c:
	Quick check-in with coredump bug fixed - thanks, efence

2002-08-20  karp  <karp@foo.local>

	* owamp/sapi.c:
	This bug never materialized but I just noticed it anyway -
	if open(".i") succeeds we shouldn't try opening
	complete file. Easy fix.

	* owamp/sapi.c:
	Removed the ".i' warning altogether - it's not supposed to
	happen when ENOENT occurs, yet mysteriously it happens AND
	ENOENT error message gets printed ("No such file or directory").

	Investigating this would be a fun adventure into deeper secrets
	of linux but...another time maybe. The situation is completely
	benign, anyway.

	* owping/owping.c:
	Fixed permissions problem when fetching from remote host.

	* owping/owping.c: Fixed duplicates counting bug.

	* owamp/sapi.c:
	Fixed Fetch warning messages - no need to issue them when can't open ".i"
	file (but do warn if ".i" file exists and can't be opened)

2002-08-20  boote  <boote@foo.local>

	* owamp/protocol.c:
	Fix to ensure WriteSessionRequest is not sent if cntrl->state shows current
	state is test.

	(The test state was wrong on both sides, but it was hidden because the
	WriteSessionRequest was not properly checking if it should be allowed
	to execute.)

	jeff

	* owamp/api.c, owamp/owampP.h, owamp/protocol.c, owamp/sapi.c, owping/owping.c:
	fix to allow control connection to properly report failed connections if
	msgtype is invalid.

	also fix of cntrl->state to actually notice that test sessions are over.

	jeff

	* owamp/capi.c: Fix sid not properly returned bug.

	jeff

	* owping/localnode.c: fix compiler warning.

	jeff

2002-08-20  karp  <karp@foo.local>

	* owping/owping.c, owping/owpingP.h:
	Implemented -keepdata, -full, -quiet and -datadir options.

	Finished computing stats. Guy and Stas request a median now.
	Removed max - average and stddev will follow soon (keep for
	now as sanity check + debugging info).

2002-08-20  boote  <boote@foo.local>

	* owamp/capi.c: Fix malloc problem.

	jeff

2002-08-19  boote  <boote@foo.local>

	* owamp/capi.c:
	Was setting the wrong default address for the server side of the test.

	jeff

	* owamp/api.c, owamp/capi.c:
	forgot to 0 port after copying saddr from tcp socket causing local bind's to
	be wrong.

	Replaced some mallocs with calloc's to zero memory.

	jeff

	* owamp/capi.c, owampd/owampd.c, owping/localnode.c:
	fixed "connect" problem with bad default address being selected. Default
	test addresses are now determined by looking at the saddr of the control
	socket.

	jeff

2002-08-19  karp  <karp@foo.local>

	* owping/owping.c:
	Debugged the window so it actully works (tested small win_size)

	* owping/owping.c:
	Added stats print-out. Finished window management - still need
	to add duplicate packets tracking but that will be easy now.
	Checking in while it still works :) [and my head begins to hurt!]

	Did some serious clean-up - now have few functions, each doing
	something truly useful.

2002-08-18  karp  <karp@foo.local>

	* owamp/sapi.c: Fixed directory path

	* owping/owping.c, owping/owpingP.h:
	Re-did the window using fixed-sized array - comparable performance
	but less headaches with memory management. Added new command-line
	options - still need to incorporate them.

2002-08-16  karp  <karp@foo.local>

	* owamp/access2.c: Zero out memory for robust hash lookups

2002-08-16  boote  <boote@foo.local>

	* owamp/api.c, owamp/capi.c, owamp/context.c, owamp/endpoint.c, owamp/endpoint.h, owamp/owamp.h, owamp/owampP.h, owamp/sapi.c, owampd/owampd.c:
	Fixed memory problem with endpoint functions.

	removed select returned message from server.

	jeff

	* owamp/api.c, owping/owping.c: api.c: corrected uninitialized var.

	owping: check strdup return.

	jeff

	* owamp/endpoint.c, owamp/sapi.c, owampd/owampd.c:
	Fixed re-binding address.

	jeff

2002-08-16  karp  <karp@foo.local>

	* owping/owping.c: Fixed handling of header in data file.

	* owamp/capi.c, owamp/owamp.h: Added OWPGetDataHeader() function.

	* owping/owping.c: owping prints ping-style results to screen - results
	are nonsense and must be debugged further but at least
	now we have something tangible to work with.

	* owamp/endpoint.c: Small bug fix

2002-08-16  boote  <boote@foo.local>

	* owamp/access2.c, owping/owping.c:
	client seems to be working fine as receiver.

	jeff

	* owping/owping.c, owamp/access.h.in, owamp/access2.c, owamp/conndata.h, owamp/context.c, owamp/defaults.c, owamp/endpoint.c, owamp/owamp.h:
	modified path functions/conndata to not need additional dynamic memory.

	jeff

2002-08-15  karp  <karp@foo.local>

	* owamp/capi.c, owamp/owamp.h, owping/owping.c:
	Have application (owping) manipulate timestamp data records
	using a wrapper data structure OWPCookedDataRec.

	* owping/owping.c: Minor typos

	* owamp/capi.c, owping/owping.c:
	Write TypeP header to file when fetching to local disk - done
	in capi.c so owping need not worry.

	Removed owp_save_to_disk from owping - have owping call
	OWPFetchSession() to get data to local disk.

	* owamp/capi.c, owamp/owampP.h, owamp/protocol.c:
	Have client process Type-P during Fetch.

2002-08-15  boote  <boote@foo.local>

	* owping/owping.c, owamp/access.h.in, owamp/access2.c, owamp/conndata.h, owamp/defaults.c, owamp/owamp.h, owamp/read_class2limits.c, owamp/sapi.c, owampd/owampd.c:
	policy changes for client. (There is a problem with the endpoint now - it can't
	write to the directory...) I'll look at it when I get back.

2002-08-15  karp  <karp@foo.local>

	* owamp/capi.c, owamp/owamp.h:
	Changed OWPFetchSessions to look like this:

	OWPErrSeverity
	OWPFetchSession(OWPControl cntrl,
			u_int32_t  begin,
			u_int32_t  end,
			OWPSID	   sid,
			int        fd)

	it now fetches records from remote server and writes them
	to user-provided file descriptor.

	Removed no longer needed

	OWPFetchRecords()
	OWPCheckPadding() [part of OWPFetchSession now]

	* owping/owping.c: At the high level added:

	/*
	** Retrieve records from remote server and save them in a file
	** on the local disk. No printing is done. Returns 0 on success,
	** or -1 on failure.
	*/
	int
	owp_fetch_to_local(OWPControl cntrl,
			   u_int32_t  num_rec,
			   char       *datadir,
			   OWPSID     sid);

	Added data structures and functions to support managing fetch state
	and, in particular, the window, for producing statistics.

	Streamlined output functions - there is now a master function:

	void
	owp_record_out(u_int8_t *rec, fetch_state_ptr state)

	which can be used to print records in any desired style.

	Set up conndata.datadir (user provided or else unique temporary)
	[just realized I forgot to actually do mkdir() - will add in
	 next check-in]

	* owamp/sapi.c: Exclusively cosmetic changes.

	* owamp/endpoint.c:
	Change opendatafile() to accept real_data_dir (which was has been set up
	in conndata) and updated the code in OWPDefEndpointInit accordingly.

	changed and moved make_data_dir() to defaults.c

	Minor cosmetic changes.

	* owamp/defaults.c:
	Make owp_check_control set up the connnection's data directories.

	ATTENTION: Jeff, owp_check_control currently doesn't have
	an error handle as argument, which was ok until recent changes - but
	now it calls make_data_dir to set up data directories (and
	make_data_dir can't get an error handle either - since the caller
	doesn't have it) yet it seems that setting up data dirs is an action
	critical enough that errors must be reported somehow. I have
	for now put calls to fprintf(stderr, ..) but maybe you can
	suggest a better way. owp_check_control currently receives policy handle
	as its app_data.

	* owamp/conndata.h:
	Added 'real_data_dir' and 'link_data_dir' fields to conndata.

	* owamp/capi.c, owamp/owamp.h: Added functions:

	/*
	** Given a 20-byte timestamp record, return its sequence number.
	*/
	u_int32_t
	OWPGetSeqno(u_int8_t *rec);

	/*
	** Parse the 20-byte timestamp data record for application to use.
	*/
	void
	OWPParseDataRecord(u_int8_t *rec,
			   OWPTimeStamp *send,
			   OWPTimeStamp *recv,
			   u_int32_t     *seq_no);

	/*

2002-08-14  boote  <boote@foo.local>

	* owamp/api.c, owamp/defaults.c, owamp/io.c, owamp/sapi.c, owampd/owampd.c:
	Removed some printing (#define VERBOSE if you want it back).

	Fixed MANY wierd isolated problems that are making me go bald and grey.

	jeff

	* owamp/api.c, owamp/capi.c, owamp/conndata.h, owamp/endpoint.c, owamp/protocol.c, owampd/owampd.c, owping/owping.c, owping/owpingP.h:
	Corrected a number of protocol problems. (error detection problems as well.)

	Client side seems to be working correctly now. Server still has some strangeness
	going on. On to that next.

	jeff

	* owamp/protocol.c:
	Corrected ReadControlAck to read the full two blocks instead of one. It works
	much better this way.

	jeff

	* owamp/api.c, owamp/capi.c, owamp/context.c, owamp/endpoint.c, owamp/endpoint.h, owamp/owamp.h, owamp/owampP.h, owamp/sapi.c, owampd/owampd.c, owping/owping.c:
	Added endpoint_status function so the status of a session endpoint can be
	queried.

	jeff

2002-08-12  karp  <karp@foo.local>

	* owping/owping.c:
	Set up skeleton and basic structures for Fetch - both local
	and remote.

	* owamp/capi.c, owamp/owamp.h:
	Changed OWPFetchRecords to more flexible interface so it
	can serve as a driver for various processing modes.
	Separated handling final 16-byte padding into a separate
	function

	OWPErrSeverity
	+OWPCheckPadding(OWPControl cntrl)

	Added new function
	/*
	** "Fetching" data from local disk - assume the header has been
	** processed already.
	*/
	OWPErrSeverity
	OWPFetchLocalRecords(int fd,
			     u_int32_t num_rec,
			     OWPDoRawDataRecord proc_rec,
			     void *app_data)


	It seems somewhat tricky (and a bit ugly) to combine it with
	OWPFetchRecords so I am thinking of just keeping them apart.

2002-08-10  boote  <boote@foo.local>

	* I2util/I2util/io.c, I2util/I2util/io.h: see last ci.

	jeff

2002-08-09  boote  <boote@foo.local>

	* owampd/owampd.c, owping/owping.c, owping/owpingP.h, I2util/I2util/ErrLog.c, I2util/I2util/Makefile.am, I2util/I2util/random.c, I2util/I2util/util.h, I2util/Makefile.am, owamp/api.c, owamp/capi.c, owamp/endpoint.c, owamp/io.c, owamp/owamp.h, owamp/protocol.c, owamp/sapi.c:
	I2util:
		made random use raw io so forked processes could read from the
		same fd without problems.

		added readn/writen functions from owamp

	owamp:
		made everything use I2 versions of readn/writen

		removed get_timestamp_func from ctx - we are not using it.

		stopped forks from closing all open descriptors

	owampd/owping:

		PolicyInit was core dumping because we were calling it with
		an errhand and it was expecting a ctx... I changed the apps
		to call it with a ctx.

	jeff

	* owamp/Makefile.am, owamp/api.c, owamp/capi.c, owamp/endpoint.c, owamp/io.c, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, owamp/sapi.c, owamp/time.c, owamp/unixtime.c, owamp/unixtime.h, owampd/owampd.c, owping/owping.c:
	Cleaned up the StopSessions functions - they were a bit confused.
	Added the Wait version one.
	Corrected places where OWPErrOK was assumed to be 0 - since it isn't anymore...
	Added timeval conversion functions.
	removed unixtime.h since everything is in owamp.h and owampP.h.

	jeff

2002-08-08  boote  <boote@foo.local>

	* I2util/I2util/ErrLog.c, I2util/I2util/errlog.h, owamp/access2.c, owamp/api.c, owamp/capi.c, owamp/context.c, owamp/endpoint.c, owamp/error.c, owamp/io.c, owamp/owamp.h, owamp/owampP.h, owamp/sapi.c, owampd/owampd.c, owping/owping.c:
	I2util: added a va_list logging function.

	owamp:
		changed the OWPError function to be a macro and removed the
		OWPErrorLine function. The I2ErrLog stuff is used by the OWPError
		macro.

	jeff

2002-08-08  karp  <karp@foo.local>

	* owamp/capi.c, owamp/owamp.h, owamp/sapi.c:
	Fully implemented server-side Fetch functionality. Added functions:

	OWPErrSeverity
	OWPProcessRetrieveSession(OWPControl cntrl);  /* top level function */
	- it calls the following ones:

	/*
	** Read records from the given descriptor and send it to the OWPControl socket.
	*/
	static OWPErrSeverity
	OWPSendFullDataFile(OWPControl cntrl, int fd,u_int32_t blksize,off_t filesize);

	/*
	** Read timestamp data records from the descriptor and count or send them
	** to Control socket depending on <type>. Error code is returned via
	** <*err_ret> and must be checked by caller. When <type> is OWP_COUNT,
	** returns the number of records within the given range (and when
	** <type> is OWP_SEND the return value can be ignored).
	*/
	static u_int32_t
	OWPProcessRecordsInRange(OWPControl      cntrl,
				 int             fd,
				 u_int32_t       begin,
				 u_int32_t       end,
				 u_int32_t       blksize,
				 off_t           rem_bytes,
				 int             type,       /* OWP_COUNT, OWP_SEND */
				 OWPErrSeverity* err_ret
	)

2002-08-08  boote  <boote@foo.local>

	* I2util/I2util/ErrLog.c, I2util/I2util/errlog.h, I2util/I2util/random.c, I2util/I2util/random.h, owamp/api.c, owamp/capi.c, owamp/endpoint.c, owamp/error.c, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, owamp/sapi.c, owampd/owampd.c, owping/owping.c, bootstrap:
	Modified the random functions to be relative to a random "context".
	Modified the OWPErr functions to exclusively use the I2Err functions.
	(The OWPErr functions are simply a wrapper around the I2Err functions -
	unfortunately they can't be macros due to the var-args...)

	This means if you want to have an application defined error function, you have
	to define the I2ErrHandler yourself, and assign it to eh in the OWPContext.

	This actually simplified things quite a bit. I would almost like to go
	through and remove all the OWPError and OWPErrLine calls and replace them
	with I2 varients - may do that later, doesn't seem worth it right now. It
	would make the __FILE__ and __LINE__ macro's cleaner.

	jeff

	* I2util/I2util/ErrLog.c, I2util/I2util/errlog.h:
	Actually removed the lines of code I replaced - before they were just ifdef'd
	out.

	jeff

	* I2util/I2util/ErrLog.c, I2util/I2util/ErrLogImmediate.c, I2util/I2util/ErrLogSyslog.c, I2util/I2util/errlog.h, I2util/I2util/errlogimmediate.h, I2util/I2util/errlogsyslog.h:
	Modified the I2ErrLog stuff to support a level or priority. You can
	access this by using the new I2ErrLogT(eh,level,code,fmt,...) error reporting
	macro/function.

	(You know things are good when you actually remove lines of code to add
	additional functionality.)

	jeff

2002-08-07  boote  <boote@foo.local>

	* I2util/I2util/ErrLog.c, I2util/I2util/random.c, I2util/I2util/random.h, I2util/README, I2util/config/randomdev.m4, I2util/configure.ac:
	Added an autoconfig check to ensure a kernel random device is available.

	random.h will fail to compile if autoconfig doesn't find one.

	(Don't update your local copy until I check in changes to owamp - I changed
	the RAND* macro's to have I2 at the beginning.)

	jeff

2002-08-06  karp  <karp@foo.local>

	* owamp/endpoint.c: More replacements of the last #defines - done now.

	* owamp/endpoint.c, owamp/owamp.h:
	Added defines for nodes/sessions dirsr etc

2002-08-06  boote  <boote@foo.local>

	* Makefile.am, configure.ac, owamp/Makefile.am, owamp/conndata.h, owamp/defaults.c, owamp/endpoint.c, owampd/Makefile.am, owampd/owampd.c, owping/Makefile.am, owping/owping.c:
	libraries are merged.

	We still need to clean the namespace, and it will probably be a good idea
	to look at some things a bit closer. I think there are some things that
	should perhaps be moved around to make them clearer. (Code review kinds of
	things.)

	jeff

	* owamp/Makefile.am, owamp/endpoint.c, owamp/owamp.h, owamp/time.c, owamp/unixtime.c, owamp/util.c:
	in the process of combining libowamp/libowpcontrib

	jeff

	* owamp/print.c, owamp/unixtime.c:
	Moved a number of functions from unixtime.c into owamp/time.c : renamed
	hexencode in print.c.

	jeff

2002-08-06  karp  <karp@foo.local>

	* owamp/endpoint.c: Make hexencode public for use in debug functions

2002-08-06  boote  <boote@foo.local>

	* owamp/endpoint.c, owamp/owamp.h, owampd/owampd.c, owampd/owampdP.h, owping/owping.c, owping/owpingP.h:
	Added sym-link dir for all session files.

	corrected memory over-run with char * path variables.

	Added policy configuration to client side.

	Unified use of OWP_PATH_SEPARATOR.

	jeff

2002-08-06  karp  <karp@foo.local>

	* owamp/print.c: Added owp_dump_msg() function

	* I2util/I2util/random.c, I2util/I2util/random.h, owamp/api.c, owamp/owamp.h, owampd/owampd.c, owping/owping.c:
	Added randomness source initialization support, and updated
	affected code elsewhere. The proper order of events now is:

	1. OWPContextInitialize() [calls I2RandomSourceInit()]
	2. repeated calls to I2RandomBytes() [not affected by any subsequent changes
				             in underlying randomness source]

2002-08-05  karp  <karp@foo.local>

	* I2util/I2util/random.c: Tiny - forgot to add a cast

	* I2util/I2util/random.c: Re-did I2RandomBytes to use /dev/urandom

2002-08-05  boote  <boote@foo.local>

	* owampd/owampd.c, I2util/I2util/table.h, owamp/endpoint.c, owamp/sapi.c:
	Test sessions seem to work - owping doesn't wait for the test session to finish - but if you wait until the -datadir/SID.i file is renamed to -datadir/SID you
	do get a complete file.

	I need to modify the file-buffering some, and owping needs to be modified to
	wait for the test session to complete.

	jeff

2002-08-05  karp  <karp@foo.local>

	* owping/owping.c: Minor fix - misplaced #define

	* owping/Makefile.am: Linked in math library.

	* owping/owping.c:
	Implemented owping output. The master function doing the output is

	/*
	** Master output function - reads the records sent by the server
	** and prints them to the stdout in a style specified by <type>.
	** Its value is interpreted as follows:
	** 0 - print out send and recv timestamsps for each record in machine-readable
	** format;
	** 1 - print one-way delay in msec (in %.3f format) for each record,
	** and final summary (original ping style: max/avg/min/stdev) at the end.
	*/
	int
	do_records_all(OWPControl cntrl, u_int32_t num_rec, int type, FILE *fp);

	* owamp/capi.c:
	Moved fetch call-back functions into owping.c. Minor fixes.

2002-08-02  boote  <boote@foo.local>

	* owamp/endpoint.c, owamp/sapi.c:
	fixed memory bugs relating to sockaddr_storage.

	jeff

2002-08-01  boote  <boote@foo.local>

	* owamp/access2.c, owamp/conndata.h, owamp/endpoint.c, owamp/io.c, owamp/read_class2limits.c, owamp/unixtime.c, owamp/unixtime.h, owampd/owampd.c, owampd/owampdP.h, owping/owping.c, owping/owpingP.h:
	First cut at the recv/send functionality. There are definitely some problems
	still -but sessions to actually happen. (Data files don't seem to have
	everything in them I would expect yet...)

	But - I wanted to get this all checked in before I leave for my flight.

	jeff

2002-07-30  karp  <karp@foo.local>

	* owamp/access2.c:
	Minor - replaced bcopy by memcpy (yes, watched arg order\!)

	* owamp/access.h.in, owamp/read_class2limits.c:
	Added tree-traversal functions:

	/*
	** Generic type for a node-processing function.
	*/
	typedef void (*owp_node_func)(
		owp_tree_node_ptr node,   /* Node to be processed.         */
		void *data                /* Additional data to be passed. */
	);

	/*
	** Generic tree traversal function. Caller provides the node-processing
	** function <func> along with any necessary data.
	*/
	extern void
	owp_tree_iterate_df(owp_tree_node_ptr root, owp_node_func func, void *data);

	/*
	** Default function for printing node info to a given file stream
	** (to be cast as FILE* from <data>)
	*/
	extern void owp_print_node(owp_tree_node_ptr node, void *data);

	Fixed bugs with saving nodes to `class2node' hash.

	* owamp/access2.c:
	Fixed memory leaks and corrected line-counting in read_ip2class()

	* owamp/access2.c: Minor bug fix.

2002-07-29  karp  <karp@foo.local>

	* owamp/access2.c:
	This is a message for the last check-in (typed Enter too fast, sorry).
	Completely re-wrote owp_read_ip2class() - removed arbitrary restrictions
	on length of classnames along the way.

	Minor fixes elsewhere.

	* owamp/access.h.in, owamp/access2.c, owamp/defaults.c, owamp/read_class2limits.c:
	access2.c

2002-07-27  boote  <boote@foo.local>

	* owamp/api.c, owamp/conndata.h, owamp/defaults.c, owamp/endpoint.c, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, owamp/rijndael-api-fst.h, owamp/unixtime.c, owamp/unixtime.h, owampd/owampd.c, owampd/owampdP.h, owping/owping.c:
	compiles - but I have NOT tested it at ALL.

	I'm sorry tolya, but I've run out of time. I will try and do more
	 while in Boulder. (The send code is complete, but I don't have
	 the receiver code in there yet. It shouldn't be too hard, the
	 difficult timing stuff was in the sender.)

	jeff

2002-07-26  karp  <karp@foo.local>

	* owamp/access2.c, owamp/read_class2limits.c:
	Fixed memory leaks from indiscriminate use of raw2datum()

	* owamp/print.c: Added file banner.

	* owampd/Makefile.am, owping/Makefile.am:
	Switched order of dependencies to allow use of owpcontrib/print.c

	* owamp/owampP.h: Added prototype for owp_print_owpaddr

	* owamp/print.c: Added debug functions:

	void
	owp_print_strnet(owp_access_netmask *ptr, FILE* fp);
	- prints out 'netmask struct' used by policy functions.

	void
	owp_print_netmask(const I2datum *key, FILE* fp);
	- convenience function. Prints out netmask returned as an I2datum
	from a hash look-up.

	/* Show the contents of a sockaddr struct. */
	void
	owp_print_sockaddr(struct sockaddr *sock);

	/* Show the contents of an OWPAddr struct. */
	void
	owp_print_owpaddr(FILE *fp, OWPAddr addr);

	* owampd/owampd.c: Tiny - set policy field in conndata (NewConnection)

	* owamp/access.h.in: Added check_test() prototype.

	* owampd/owampd.c:
	Fixed policy arg to NewConnection. Installed default call-backsin cfg.

2002-07-25  karp  <karp@foo.local>

	* owamp/protocol.c: Fixed a big with a wrong message size.

	* owamp/defaults.c: Minor fixes.

	* owamp/io.c:
	Simplified _OWPSendBlocks and OWPReceiveBlocks, and also enabled
	them to send/receive *any* number of blocks.

	* owamp/owampP.h: Added prototype for _OWPReadDataHeader()

	* owamp/capi.c, owamp/owamp.h:
	Implmented OWPFetchRecords() using the callback function mechanism.

2002-07-24  karp  <karp@foo.local>

	* owamp/access2.c: Added #ifdefs for AF_INET6

	* owamp/capi.c, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c:
	Added functions OWPFetchSession() and OWPReadDataHeader().

2002-07-23  karp  <karp@foo.local>

	* owamp/arithm64.h, owamp/arithm64.c:
	Added OWPnum64 OWPusec2num64() function.

2002-07-23  boote  <boote@foo.local>

	* owamp/api.c, owamp/owampP.h, owamp/protocol.c:
	api.c,owampP.h,protocol.c:	modified kid to be 16 byte field.

	jeff

2002-07-22  karp  <karp@foo.local>

	* owamp/arithm64.c, owamp/arithm64.h: Added timespec conversions.

	* I2util/I2util/table.c: Remove debug checks (no longer needed).

	* owamp/access2.c: Fixed bugs in crucial policy lookups.

	* owamp/Makefile.am: Removed arithm128 files from sources.

	* owamp/arithm64.c, owamp/arithm64.h: Make arithmetic functions public.

	* owamp/arithm128.c, owamp/arithm128.h, owamp/owamp.h:
	Removing arithm128_* files

	* owamp/access.h.in: Added missing prototypes.

	* owamp/read_class2limits.c: Fixed harmless compiler warnings.

	* I2util/I2util/table.c: Added casts to pacify compiler.

2002-07-19  boote  <boote@foo.local>

	* owamp/api.c, owamp/capi.c, owamp/conndata.h, owamp/endpoint.c, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, owamp/sapi.c:
	Made changes to use sockaddr_storage instead of dynamic memory...

	Made many other minor fixes.

	First cut at EndpointInit and EndpointInitHook - no data being sent yet - just
	dealing with process stuff so far.

	jeff

2002-07-19  karp  <karp@foo.local>

	* owamp/api.c, owamp/owamp.h: Added owp_ip_packet_size function.

	* owamp/api.c: Minor bug fix with init values in _OWPAddrAlloc.

	* owamp/access.h.in, owamp/access2.c, owamp/read_class2limits.c:
	Fixed bugs in look-ups. Changed field class2limits to class2node

2002-07-18  karp  <karp@foo.local>

	* owamp/conndata.h: oops - forgot semicolon

	* owamp/conndata.h: Added 'mode' field to OWPPerConnDataRec struct.

	* I2util/I2util/table.c, owamp/owamp.h:
	Minor clarifications in comments.

	* owamp/read_class2limits.c:
	Slightly changed interface to read_class2limits.

	* owamp/defaults.c:
	Finished owp_check_control() and added owp_check_test()
	hook functions.

	* owamp/access2.c: More integrity checks for config files.

	* owamp/access.h.in: Added macros for easier access to class limits.
	Added a pointer to the root of class tree hierarchy
	to the policy struct - simplifies set-up of default
	classes for ip addresses.

2002-07-17  karp  <karp@foo.local>

	* owamp/conndata.h: Added 'node' field for the connection class.

2002-07-16  karp  <karp@foo.local>

	* owamp/read_class2limits.c:
	Added consistency and integrity checks to owp_get_description()

	* owamp/print.c:
	Extended print_class2node_binding to print all node fields.

	* owamp/defaults.c:
	Added application-provided owp_check_control() function.

	* owamp/access2.c: Added owp_sockaddr2class() function.

	* owamp/access.h.in:
	Added prototypes for owp_kid2passwd() and owp_sockaddr2class() functions.
	Minor clean-up.

2002-07-15  karp  <karp@foo.local>

	* owamp/defaults.c: Initial import - added owp_get_aes_key() function.

	* owamp/access2.c: Added owp_kid2passwd() function.

	* owamp/conndata.h: Added policy field. Fixed typedef typo.

	* owamp/access2.c: Minor fix.

	* owamp/access.h.in:
	Added prototypes for new functions, and definitions for tree structures.

	* owamp/print.c:
	Add function owp_print_class2node_binding() - used to see/debug
	the tree hierarchy of usage classes.

	* owamp/read_class2limits.c:
	Initial import of read_class2limits.c - read the tree structure of classes,
	and their associated usage limits.

	* owamp/access2.c:
	Fixed lower level function to pass errors upwards instead
	of exiting. Completed processing the password file -
	owp_read_passwd_file(). Added owp_ prefix to symbols.

	* I2util/I2util/table.c:
	Fixed a bug in hashatom() - it was sensitive to bytes
	outside the ones being hashed. Minor addition for easier
	debugging.

2002-07-04  boote  <boote@foo.local>

	* owamp/conndata.h: Adding.

	* owamp/api.c, owamp/capi.c, owamp/context.c, owamp/error.c, owamp/owamp.h, owamp/owampP.h, owamp/sapi.c, owampd/owampd.c, owping/owping.c:
	Modified the app_data to be relative to a connection. It should be set with
	the data type defiend in owamp/conndata.h - which I will check in momentarily.

	This will allow each child process to request resouces from the parent process.
	(It might be a cool idea to call the policy stuff directly if pipefd is < 0.
	that way the same functions can be used from the client but we can talk
	about this when I get back.)

	Tolya, I hope this is clear to you.


	See you next week. I need to take off now.

	jeff

2002-07-03  boote  <boote@foo.local>

	* owamp/capi.c, owamp/owampP.h, owamp/protocol.c, owamp/sapi.c, owampd/owampd.c, owampd/owampdP.h:
	Fixed a number of really dumb errors on my part.

	owping will actually talk to owampd now - the test sessions are still
	non-existant, but things are moving in the right direction.

	jeff

	* owping/owping.c: Fixed compiler error.

	jeff

2002-07-02  boote  <boote@foo.local>

	* owping/localnode.c, owping/owping.c, owamp/api.c, owamp/capi.c, owamp/context.c, owamp/endpoint.c, owamp/endpoint.h, owamp/error.c, owamp/io.c, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, owamp/sapi.c, owamp/sprotocol.c, owampd/owampd.c:
	Big changes... Too many to go through. I should not have gone so long between
	check-in's.

	Basically I think the control protocol is nearly finished. I have not actually
	tried it yet however - it is actually a little hard to test without firing off
	a test, and I have not written the udp code yet. tomorrow. The only part of
	the control protocol that is not finished is retreiving session data. The
	client can currently request the data, but the server will always deny.
	(I figured we can just look at the data on disk for now - I want to get
	actual sessions working before messing with it.)

	removed the CheckAddr func stuff.

	jeff

2002-06-25  karp  <karp@foo.local>

	* owamp/access.h.in, owamp/access2.c, owamp/print.c:
	Parsing and print-out for new design of the password file.

	* owamp/access.h.in, owamp/access2.c, owamp/print.c:
	Added functions fetching the smallest netmask containing a given IP
	address (v4 or v6). Full print-out of ip2class hash for debugging.

	* owampd/owampd.c, owampd/owampdP.h:
	Mostly minimalistic changes or plugs just to get the program to compile so
	I could test.

	Also changed id2class to ip2class everywhere - cleaner solution in light
	of the upcoming changes to config files design.

2002-06-24  karp  <karp@foo.local>

	* owamp/arithm128.c, owamp/arithm64.c, owamp/arithm64.h, owamp/bc.txt, owamp/owamp.h, owamp/ques.dat:
	Added conversions OWPnum64 to/from struct timeval. Comments/clean-up.

2002-06-22  boote  <boote@foo.local>

	* owampd/owampd.c, owampd/owampdP.h:
	cleaned up a bit. won't compile until I add the process_requests function...

	jeff

	* owamp/unixtime.c: remove warning.

	* I2util/I2util/table.c: Oops - one check too many.

	jeff

	* I2util/I2util/table.c, I2util/I2util/table.h:
	added checks to make sure table is not modified from within iterate.

	jeff

	* owamp/api.c, owamp/capi.c, owamp/io.c, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, owamp/sapi.c:
	api.c: added OWPGetMode

	capi.c: remove state setting - done by protocol.c

	io.c: made readn/writen public functions

	owamp.h/owampP.h: modifed state stuff - more changes coming to address email...

	protocol.c: state stuff

	sapi.c: remove state setting

	jeff

2002-06-21  karp  <karp@foo.local>

	* owamp/arithm64.c:
	Replaced 'unsigned long long' by u_int64_t. Improved comments
	and added usage example.

	* owamp/Makefile.am, owamp/arithm64.c, owamp/arithm64.h:
	Initial import of 32.32 arithmetic geared for use with Owamp
	timestamps. Generation of uniform and exponential random
	numbers using AES and based on 64-bit integer type.

2002-06-19  boote  <boote@foo.local>

	* I2util/I2util/table.c, I2util/I2util/table.h, I2util/I2util/util.h:
	Tolya - I corrected some problems with the table code, and added some features.

	There was a mistake in the init function - you only used one malloc, and
	pointed the "buckets" pointer to the memory just past the I2table record.
	The problem is that there is nothing making sure that the memory just
	past the I2table record is aligned properly for pointers (the type of the
	array). There are two ways to fix this - one, add something to the end
	of the structure to ensure the next memory is aligned, or just malloc
	the buckets array seperately. (the extra malloc seemed easier, so that
	is what I did.)

	Another mistake in the init function was that you called exit. A library
	function should almost never call exit - let the calling environment
	handle the errors, just report them. In this case, it is very easy to
	just return NULL if there is a problem.

	I simplified the cmp function slightly - there was no reason to check for
	the MIN of the sizes in the bcmp (which I changed to memcmp) since you
	already know the sizes are equal or the first part of the || would have
	caused the value to be returned already. (lazy evaluation)

	In init - I reordered the primes array check for sizes so you don't have to
	have the extra 509, and the bogus INT_MAX in the array. Not really necessary,
	but I had a hard time following the logic each time I looked at it before.

	hash_close - I made it take an I2table instead of a pointer to an I2table. It
	wasn't clear to me why you had it the other way... I also removed the if
	checkes before the free'ing of the pointers. (If those pointers were NULL you
	would have core dumped from the lines before the if, because those pointers
	are dereferenced.)

	I added a hash_delete function so you can remove a key/value pair from the
	hash. (I added the iterate function earlier - you probably noticed.)

	I didn't do it, but I think it would be much cleaner to implement your hash
	printing using the hash_iterate function. Then you could take the hash_print
	function pointer out of the hash table structure. Also - you could take
	the I2binding structure out of the header file since it wouldn't be needed.

	Everything else I did was purely cosmetic - defined types for the function
	pointers and things along those lines.

	jeff

2002-06-19  karp  <karp@foo.local>

	* owamp/access2.c, owamp/print.c: Fixed bugs in IPv6 print-out.

	* owamp/access2.c, owamp/print.c:
	Added print-out for Ipv4 and IPv6 cases in read_id2class

	* owamp/access.h.in, owamp/access2.c, owamp/print.c:
	Parser reads and prints KID part of id2class mapping (IPv4 is easy
	and I just need to add hex-encoding or reverse numeric-to-ASCII mapping
	to be able to print IPv6 part). Saving data in a hash is finished
	completely (for all three types).

	To test: similar to what was in owampd (ignoring error-checking)

	PolicyInit2(eh, ip2class, class2limits, passwd, &out);
	I2hash_print(policy->ip2class, stdout);

2002-06-18  karp  <karp@foo.local>

	* owamp/access.h.in, owamp/print.c: More warnings removed

	* owamp/access.h.in, owamp/access2.c, owamp/print.c: Fixed warnings.

	* owamp/arithm128.h: Added prototype for OWPrand_context_free

	* owamp/access2.c: owamp_read_id2class() understands ipv6 now.

2002-06-18  boote  <boote@foo.local>

	* I2util/I2util/table.c, I2util/I2util/table.h:
	Added I2hash_iterate function - this is similar to the "print" function, but
	allows you to specify a different function to call each time you call
	hash_iterate. It also lets you terminate the iteration by returning false
	from the function.

	jeff

2002-06-17  karp  <karp@foo.local>

	* owamp/access2.c: Simplified logic in owamp_read_id2class().

2002-06-16  karp  <karp@foo.local>

	* owamp/access2.c: Correctly recognize legal IPv4 and IPv6 masks.

2002-06-15  karp  <karp@foo.local>

	* owamp/access2.c: Initial import. Started work on ipv6 policy.

2002-06-14  boote  <boote@foo.local>

	* I2util/I2util/util.h:
	fix for __attribute__ check... I had put it in the config.h.in file, but since
	that is dynamically generated, it didn't work too well....

	jeff

	* config/c-attribute.m4: m4 macro for __attribute__ check...

	jeff

	* configure.ac: Adding check for __attribute__.

	jeff

	* owamp/Makefile.am, owamp/api.c, owamp/capi.c, owamp/context.c, owamp/cprotocol.c, owamp/error.c, owamp/io.c, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, owamp/sapi.c, owamp/time.c:
	LOTS of cleanup. The owping/owampd directories may no longer compile due to
	changes here - but I really wanted to get this checked in because I have made a
	number of changes.

	Generically, one major change was that I removed the OWPByte type and replaced
	it everywhere with u_int8_t - I decided it was just easier to explicitly state
	the types we want. If /sys/types.h doesn't exist on a platform, we will need
	to figure out a reasonable byte type for that platform anyway - and we can
	just define u_int8_t ourselves for those systems.


	Makefile.am:
		added dependancy to owpcontrib library.

	api.c:
		mostly cleanup - initialization of cntrl->zero field.

	capi.c:
		Lots of misc fixes - changed the "protocol" functions that it calls.
	context.c:
		Byte change
	error.c:
		__attribute__ cleanup
	io.c:
		size_t <=> ssize_t mismatches made error reporting impossible.
		Byte changes
	owamp.h:
		changed a number of include files
		changed the prototypes for functions
		removed bit fields
		cleaned up namespace
	owampP.h:
		added __attribute__ macro test
		modified includes
		made constants more consistant
		added state constants and macros
		Byte changes
		Added OWPAcceptType
		Added all the protocol.c prototypes
	sapi.c:
		LOTS of changes to reflect that most of what was here, is now done
		in protocol.c
	time.c:
		Byte changes - memory alignment changes.

	protocol.c:
		All reads/writes specific to protocol messages is now in this
		file. Had to do a bunch of changes to fix memory alignment (easy
		to do - but had to look through everything to make sure it was
		done.) This replaced both cprotocol.c and sprotocol.c - each
		protocol message now has a read and a write function for it, and
		as little "smarts" as possible - essentially these are formatting
		functions - although I have started to put the "state" machine
		in them, because the "state" of the connection can be determined
		by the last protocol message recieved and/or sent. The "state"
		stuff is NOT currently consistant however, and needs work.

	jeff

2002-06-12  karp  <karp@foo.local>

	* owamp/arithm128.c, owamp/arithm128.h:
	Added OWP prefix to all symbols.

	* owamp/arithm128.c, owamp/arithm128.h:
	Moved all static data into context to be passed.

	* owamp/arithm128.c, owamp/arithm128.h: More clean-up.

	* owamp/arithm128.h: Match latest changes to arithm128.c

	* owamp/arithm128.c:
	Added a chunk of the future RFC. Renamed num_128 to num128,
	num_add() to num128_add(), and num_mul() to num128_mul().
	Removed auxilliary/debug functions - much leaner file now.

2002-06-11  karp  <karp@foo.local>

	* owamp/arithm128.c: Implemented timeval2num() conversion function.

	* owamp/rijndael-api-fst.c, owamp/rijndael-api-fst.h:
	Added prototype for bytes2Key().

2002-06-10  boote  <boote@foo.local>

	* I2util/I2util/ErrLog.c, I2util/I2util/ErrLogImmediate.c, I2util/I2util/ErrLogSyslog.c, I2util/I2util/Options.c, I2util/I2util/Pthread.h, I2util/I2util/errlog.h, I2util/I2util/random.c, I2util/I2util/random.h, I2util/I2util/table.c, I2util/config/c-attribute.m4, I2util/configure.ac:
	Removed compiler warnings.

	jeff

2002-06-10  karp  <karp@foo.local>

	* owamp/arithm128.c, owamp/arithm128.h:
	Removed leftshift() and mask arrays. Lots of overall improvements.

	* owamp/arithm128.c, owamp/arithm128.h:
	Put in fixes to make code work on machines with any size of long
	and short. Added 128-bit counter for generator of uniforms.

2002-06-09  karp  <karp@foo.local>

	* owamp/arithm128.c, owamp/arithm128.h:
	More reorganization and clean-up. Keep currently unused functions
	static. Fixed a subtle bug in mask2 (hitting once every 256 times).
	This version of exponential generator finally is in excellent
	agreement with Anderson-Darling critical values.

	* owamp/arithm128.c, owamp/arithm128.h:
	Removed more unneeded code. Completely changed the interface to
	match srand()/rand() approach.

2002-06-08  karp  <karp@foo.local>

	* owamp/arithm128.c, owamp/arithm128.h:
	Separated left shift into a separate function. Fixed many compiler
	warnings.

2002-06-07  karp  <karp@foo.local>

	* owamp/arithm128.c: Clean-up. Removed unnecessary comments.

	* owamp/arithm128.c, owamp/arithm128.h, owamp/rijndael-api-fst.c, owamp/rijndael-api-fst.h:
	Added 128-bit counters.

	* owamp/arithm128.c: Improved precision in the 64th bit of Q[].

	* owamp/arithm128.c, owamp/arithm128.h, owamp/rijndael-api-fst.c, owamp/rijndael-api-fst.h:
	Quick check-in - fixed reuse of uniforms.

2002-06-06  boote  <boote@foo.local>

	* owamp/api.c, owamp/capi.c, owamp/owamp.h, owamp/owampP.h, owamp/sapi.c, owamp/sprotocol.c, owampd/owampd.c, owping/owping.c:
	substaintial reorganization of the server code. I'm not done yet, but I wanted
	to check in to check-point the work.

	(This version compiles, but will definately not work.)

	jeff

2002-06-06  karp  <karp@foo.local>

	* owamp/arithm128.c, owamp/arithm128.h:
	Algorithm is largely working - checking in for safety's sake.

	* owamp/arithm128.c: Corrected small bugs - more work is needed.

2002-06-05  karp  <karp@foo.local>

	* owamp/exponential.c, owamp/exponential.h:
	Not needed anymore - implemented Knuth at home.

	* owamp/arithm128.c, owamp/arithm128.h:
	Essentially completed implementation of Knuth. Untested so far.

2002-06-04  karp  <karp@foo.local>

	* owamp/rijndael-api-fst.h, owamp/rijndael-api-fst.c:
	Added support for counter mode.

	* owamp/arithm128.c, owamp/arithm128.h:
	Started working on Knuth algorithm.

	* owamp/arithm128.c, owamp/owamp.h:
	Tiny bug - updated arithm128 dependence.

	* owamp/Makefile.am: Replaced arithm* with arithm128* source files.

	* owamp/arithm.c, owamp/arithm.h: Renamed and improved into arithm128*

	* owamp/arithm128.c, owamp/arithm128.h:
	Clean-up and better documentation. Renamed the file into arithm128*.{c,h}

2002-06-03  karp  <karp@foo.local>

	* owamp/arithm.c, owamp/arithm.h:
	Various improvements. Added more conversion functions.

	* owamp/arithm.c: Added conversion functions.

2002-06-02  boote  <boote@foo.local>

	* I2util/I2util/Makefile.am, I2util/I2util/random.c, I2util/I2util/random.h, I2util/I2util/util.h, I2util/Makefile.am, owamp/Makefile.am, owamp/api.c, owamp/arithm.c, owamp/arithm.h, owamp/capi.c, owamp/cprotocol.c, owamp/owampP.h, owamp/random.c, owamp/sapi.c, owampd/owampd.c:
	Reorganizing things...

	Tolya - when you create new files please put a $Id$ comment header at the
	beginning of the file. (I don't really care that much if you use the comment
	script, but I really want the version number in there - it makes it much easier
	to determin how out-of-date printout's are.)

	Also - I moved your arithmatic out of I2util and put it into owamp - it is
	difficult to imagine something more specific to owamp. I2util is for code
	that is likely to be used for projects completely unrelated to owamp.

	I'm thinking more and more about rolling all the owpcontrib code right into
	the owamp directory, but I decided to leave it alone for now. Let me know
	if you have opionions one way or the other about it.

	Oh - I also broke up api.c into 3 files:
	api.c
	capi.c
	sapi.c

	api.c contains functions that are used by capi.c and sapi.c. capi.c is client
	api functions and sapi.c is server api functions.

	Now that I've reorganized the code to more easily digestable chunks, I'm going
	to start taking some of the code from owampd and putting it in sapi.c, and
	extending it to actually start test sessions.

	(I probably won't get enough done today to check in again today - in fact,
	considering what I will be doing, it will probably be a few days before I
	check-in again.)

	jeff

	* owamp/Makefile.am, owamp/api.c, owamp/context.c, owamp/cprotocol.c, owamp/endpoint.c, owamp/io.c, owamp/owamp.h, owamp/owampP.h, owamp/time.c, owampd/owampd.c, owping/owping.c:
	This version of owping/owampd will go all the way through making a test request
	to the server. The server will just print out that a request happened.

	owamp/
	Makefile.am:
		adding time.c: functions for encoding/decoding struct timestamps
		to the format required for network transmittion.
	api.c:
		Corrected default address mechanisms in NodeByAddr and related...

	context.c:
		Corrected callendpointinithook function.

	cprotocol.c:
		Added function that encodes TestRequests, and reads AcceptSession
		messages.

	endpoint.c:
		Forgot to set the end_data_ret pointer in the init func...

	io.c:
		Corrected the type used to return the value from the OWPReadn
		function - it was unable to detect an error condition.

	owamp.h:
		Renamed OWPPoissonTestSpec to OWPTestSpecPoisson - names should
		go from general to specific, so the "family" of the type can
		be seen immediately.

	owampP.h:
		Added time.c prototypes.

	owampd/
	owampd.c:
		#ifdef'd out problem hiding things. (Problems from children were
		being printed to a file instead of being seen in stderr where they
		would be noticed. And removed the "exit" - so the server would
		actually read a request.

	owping/
	owping.c:
		Added a "flush" for stderr because some error messages were getting
		lost. (I may remove this later - the error messages are showing now,
		but stderr should automatically be line buffered, so I need to
		figure out what is going on here...)
		Also modified how the "addr" code is called to reflect the corrections
		mentioned above in api.c.

2002-05-31  karp  <karp@foo.local>

	* I2util/I2util/Makefile.am, I2util/I2util/util.h:
	Added support for arithmetic functions.

	* owamp/arithm.c, owamp/arithm.h:
	Initial import - implementation of 128-bit arithmetic.

	* owamp/owamp.h, owamp/sprotocol.c, owampd/owampd.c:
	Fix to make things compile.

2002-05-30  karp  <karp@foo.local>

	* owamp/api.c, owamp/owamp.h, owamp/owampP.h, owamp/sprotocol.c, owampd/owampd.c:
	Bulk check-in to have a common base.

2002-05-29  boote  <boote@foo.local>

	* owamp/Makefile.am, owamp/api.c, owamp/context.c, owamp/endpoint.c, owamp/endpoint.h, owamp/owamp.h, owamp/owampP.h:
	Added endpoint logic - the "meat" is not there yet.

	owping currently core dumps because it passes in null addresses - I will
	fix it tomorrow.

	jeff

2002-05-28  boote  <boote@foo.local>

	* owamp/api.c, owamp/context.c, owamp/cprotocol.c, owamp/io.c, owamp/owamp.h, owamp/owampP.h, owampd/owampd.c, owping/owping.c:
	api.c:
		All the logic for making a test request - still need to fill in
		the details for local endpoints.
	context.c:
		Modified the Policy functions a bit.
	cprotocol.c:
		Started the stub for sending a test request to the server - will have
		it use the same structure Tolya is using to parse the request once
		he checks it in.
	io.c:
		Added connect_tmout function.
	owamp.h:
		modified addr structure prototype to include port.
	owampP.h:
		added prototypes for context.c
	owampd.c:
		Modified calls to functions I had changed.
	owping.c:
		ditto

	jeff

2002-05-24  karp  <karp@foo.local>

	* owampd/owampd.c:
	Minor bug fixes and clean-up. Added some error checks.

	* owampd/owampd.c: Improved handling of EINTR in select().

2002-05-23  karp  <karp@foo.local>

	* owampd/owampd.c:
	Child is ready for testing Control session now. Server can simply
	be started from command line by typing:

	./owampd

	(it will bind to port 5555 and begin accepting connections.
	Will Control part work? I don't know yet.)

	* owampd/owampd.c: Parent correctly manages fd_set now.

2002-05-22  karp  <karp@foo.local>

	* owamp/sprotocol.c: Fixed a bug in OWPServerReadRequest().

2002-05-22  boote  <boote@foo.local>

	* owamp/api.c: Oops - typo already....

	jeff

	* owamp/api.c:
	Added ability to specify nodenames with rfc2396/rfc2732 service specifiers.
	(i.e. "node:service" syntax.)

	jeff

2002-05-22  karp  <karp@foo.local>

	* owampd/owampd.c:
	Rewrote server skeleton to make use of parent-child communication
	via pipes. The code is still quite raw, and much needs to be
	improved.

2002-05-22  boote  <boote@foo.local>

	* owamp/owampP.h: Adding port to Addr struct.

	jeff

	* owamp/api.c, owamp/io.c, owamp/owamp.h, owamp/owampP.h:
	moved connect_tmout to io.c and renamed _OWPConnect - modified port number
	for control to 5555.

	jeff

2002-05-21  karp  <karp@foo.local>

	* owamp/api.c:
	Minor clean-up. Sorted out _OWPCallCheckControlPolicy() call.

	Doesn't compile yet due to timevalclear and others...

	* owamp/access.h.in:
	Added OWP_ prefix to OPEN_CLASS, AUTH_CLASS and BANNED_CLASS

2002-05-20  boote  <boote@foo.local>

	* owamp/api.c, owamp/error.c: api.c
		fixed bug in ClientConnect code.
	error.c
		fixed bug in sizeof buffer args - caused error messages to be corrupt.

	jeff

	* bootstrap, owamp/access.h.in, owamp/api.c: bootstrap:
		add call to configure

	owamp/api.c
		fixed connect_tmout - I will probably move this function to
		io once I'm sure it all compiles.

	owpcontrib/access.h.in
		Added default value for OWP_PREFIX to headerfile.

	jeff

2002-05-20  karp  <karp@foo.local>

	* owampd/owampd.c: Fixed location of parentheses.

	* owampd/owampd.c:
	Improved check_control() function. Cleaner logic in read/process request
	loop (as discussed on the way to Ben).

	* owamp/sprotocol.c:
	Clean-up. Removed unused functions OWPSendServerGreeting and others.

	* owamp/owamp.h:
	Added #defines for OWP_CTRL_* Control protocol message types,
	and prototype for OWPServerReadRequest().

	* owamp/api.c: Added robustness to OWPControlAccept().

2002-05-18  karp  <karp@foo.local>

	* owampd/owampd.c: Some clean-up of things not being used right now.

	Bug fixes in owamp_first_check(), fixed check_control() prototype.

	Fixed a bug with the number of args in OWPServerCheckAddrPolicy(... NULL...)
	which caused me some core dumps and torturous debugging. Wouldn't happen
	if I had put a prototype in owamp.h (grrrrr) -
	thanks for the lesson, Jeff! -:)

	* owamp/owamp.h:
	Added prototypes for OWPGetContext() and OWPServerCheckAddrPolicy().

2002-05-17  boote  <boote@foo.local>

	* owamp/api.c, owamp/context.c, owamp/cprotocol.c, owamp/io.c, owamp/owamp.h, owamp/owampP.h, owamp/sprotocol.c, owping/Makefile.am, owping/localnode.c, owping/owping.c, owping/owpingP.h:
	check-point last week of work.

	jeff

2002-05-16  boote  <boote@foo.local>

	* owamp/access.h.in, owamp/unixtime.c, owamp/unixtime.h:
	Fix for conf_dir and adding gettimeofday interface.

	jeff

2002-05-16  karp  <karp@foo.local>

	* owamp/sprotocol.c:
	Commented out _OWPSendServerGreeting and _OWPReadServerGreeting

	* owamp/api.c: Incorporated removal of challenge field from OWPControl.

	* owamp/api.c, owamp/context.c, owamp/owamp.h, owamp/sprotocol.c, owampd/owampd.c:
	Quick check-in while everything still compiles.

2002-05-14  karp  <karp@foo.local>

	* owamp/context.c:
	Replaced OWPContext by OWPControl argument in _OWPCallCheckTestPolicy().

	* owamp/bc.txt:
	Simple bc script to compute Q[] series from Knuth algorithm.

	* owamp/ques.dat:
	Computed hex-encoded Q[] values for Knuth S algorithm.

2002-05-11  boote  <boote@foo.local>

	* configure.ac, owamp/api.c, owampd/Makefile.am, owping/owping.c:
	I believe a full build will not work.

	Tolya - I ifdef'd out ControlAccept since it isn't compiling right now. I'll
	let you correct the problmes and add it back in.

	jeff

	* owamp/api.c: Corrected a few bugs.

	jeff

	* Makefile.am, configure.ac, owamp/access.h.in, owamp/api.c, owamp/owamp.h, owampd/Makefile.am, owampd/owampd.c, owping/Makefile.am, owping/owping.c, owping/owpingP.h:
	Renaming contrib to owpcontrib.

	Modified the OWP_CONF_DIR flag to be set relative to a "prefix" that is set
	as autoconf normally would. - this took renaming access.h to access.h.in and
	having autoconf parse it and make changes.

	api.c:
	Added a connect_tmout to api.c

	Corrected logic for CheckControlPolicy checks.

	owping:
	A bit more - won't currently compile.

	jeff

2002-05-10  karp  <karp@foo.local>

	* owamp/api.c: Removed OWPAddrCheck() - not needed.

2002-05-08  karp  <karp@foo.local>

	* owamp/exponential.c, owamp/exponential.h:
	Implementation of uniform and exponential distributions following
	the original Marsaglia-Ahrens (1972) algorithm as described in
	Knuth (1998), with latest improvements. Culled from the libranlib
	C library for random number generators.

	Usage: float genexp(float mu);

	will generate successive draws from exponential distribution
	with mean mu. (I've just generated 200 of those and visually it
	looks good).

	Current implementation is using made on-the-spot uniform draws.
	Alternative is to use system-provided random() to get the
	uniform deviates as input for the algorithm.

2002-05-03  karp  <karp@foo.local>

	* owampd/owampd.c:
	Some clean-up. Removed policy init into a separate function.

	* owamp/sprotocol.c:
	Added prototypes and main loop inside Control session.

	* owamp/access.h.in: Add typedef for policy_data.

	* owamp/print.c:
	Initial import for print.c - basic hash print-out functions
	are isolated there.

	* configure.ac, owampd/Makefile.am:
	This allows applications (owampd for now) access config directory as
	OWP_CONF_DIR. Temporary solution, hopefully to be replaced using
	autoheader.

	Jeff, I did some reading on AC_CONFIG_HEADER but I am still
	not comfortable using it. I don't want to spend too much time
	on it - I am making this commit just so I can get on with
	the rest of the server.

	--Tolya

2002-05-02  boote  <boote@foo.local>

	* configure.ac, owamp/Makefile.am, owamp/api.c, owamp/context.c, owamp/owamp.h, owping/Makefile.am, owping/localaddr.c, owping/localaddr.h, owping/localnode.c, owping/localnode.h, owping/owping.c, owping/owpingP.h:
	My changes now compile.

	I added some dependency stuff to the Makefile.am in owping.

	tolya - that same dependency stuff might be useful in owampd...

	jeff

	* owamp/api.c, owamp/context.c, owamp/owamp.h, owamp/owampP.h, owping/localaddr.c, owping/localaddr.h, owping/owping.c:
	Removing kid - and updating owping to latest. Don't update until after my next
	check-in, I still need to verify compilation.

	jeff

2002-05-01  karp  <karp@foo.local>

	* owamp/io.c:
	Not need to update IV as this is done in rijndael api now. Added banner.

	* owampd/owampd.c: Update owampd skeleton to have things compile.

	* owamp/api.c, owamp/sprotocol.c: sprotocol.c

	* owamp/io.c, owamp/rijndael-api-fst.c:
	Fixed rijndael API to update IV automatically during blockEncrypt/
	blockDecrypt so that libowamp (_OWPEncryptBlocks and _OWPDecryptBlocks)
	need not worry about it at all.

2002-04-30  boote  <boote@foo.local>

	* owamp/api.c: reverse if test to make more clear.

	jeff

	* configure.ac, owamp/api.c, owamp/owamp.h, owping/Makefile.am, owping/owping.c, owping/owpingP.h:
	owping will compile now. Because the configure.ac file changed - you need
	to ./bootstrap after updating to this.

	jeff

2002-04-30  karp  <karp@foo.local>

	* owamp/sprotocol.c:
	Updated to make use of latest additions to the api.

2002-04-30  boote  <boote@foo.local>

	* owping/Makefile.am: forgot to add owpingP.h as source file...

	jeff

	* I2util/I2util/table.c, owping/Makefile.am, owping/localaddr.c, owping/localaddr.h, owping/owping.c, owping/owpingP.h:
	owping first real check-in. Not real functional, but at least gives an
	outline. Does not implement policy hooks yet. (Should be able to use exact
	same ones as owampd after cleanup.)

	I2util/I2util/
		table.c:made sure default compare function doesn't overrun memory.

	owping/
	Makefile.am:	added localaddr template - still working on code.
	owping.c:	organized.
	localaddr.[ch]	localaddr template.
	owpingP.h:	typedefs for owping.

	jeff

2002-04-30  karp  <karp@foo.local>

	* owamp/rijndael-api-fst.c, owamp/rijndael-api-fst.h:
	Removed unused code.

	* owamp/owampP.h:
	Replaced old key field by encrypt_key and decrypt_key in OWPControlRec.

	* owamp/io.c: Removed send_blocks().

	Added 	_OWPSendBlocks(OWPControl cntrl, char* buf, int num_blocks),
		_OWPReceiveBlocks(OWPControl cntrl, char* buf, int num_blocks),
		_OWPEncryptBlocks(OWPControl cntrl,char *buf,int num_blocks,char *out)
		_OWPDecryptBlocks(OWPControl cntrl,char *buf,int num_blocks,char *out)

	* owamp/api.c: Added _OWPMakeKey(OWPControl cntrl, OWPByte *binKey),
		OWPEncryptToken(char *binKey, char *token_in, char *token_out),
		OWPDecryptToken(char *binKey, char *token_in, char *token_out).

	Minor clean-up.

2002-04-30  boote  <boote@foo.local>

	* owamp/api.c: wrong include syntax.

	jeff

	* I2util/I2util/table.c, I2util/I2util/table.h, owamp/access.h.in, owamp/owampP.h, owampd/Makefile.am, owampd/owampd.c, owping/Makefile.am, owping/owping.c:
	Removed references to old table symbols are replaced them with I2hash_init
	etc...

	(I need to verify this compiles on a system up there - so expect another ci
	shortly.)

	I also changed the table code to use the I2ErrLog stuff instead of OWPError.

	Tolya - I think it would be much cleaner to remove the hash functions from
	owampd - and put them all into access.[ch]. I don't see any reason why
	owamp_read_ip2class, owamp_read_class2limits, and read_passwd_file couldn't
	call I2hash_init themselves and return the hash_table as the return value of
	the function. You could still call I2hash_print for debugging purposes - but
	the code could be much cleaner this way. What do you think?

	jeff

2002-04-29  boote  <boote@foo.local>

	* I2util/I2util/ErrLog.c, I2util/I2util/Makefile.am, I2util/I2util/Options.c, I2util/I2util/options.h, I2util/I2util/table.c, I2util/I2util/table.h, I2util/I2util/util.h, I2util/Makefile.am:
	Adding Tolya's hash table into the I2util library. Modified the symbols to
	start with I2.

	Makefile.am:
		added table.h as installable.

	ErrLog.c:
		Corrected comment.

	I2util/

	Makefile.am:
		added table.c source.

	Options.c,options.h:
		Added stringtoUint converter.
		Made stringtoint converter use strtol instead of less predictable sscanf
		Corrected arg printing routine to deal with varargs.
	util.h:
		added include of table.h

2002-04-26  boote  <boote@foo.local>

	* I2util/I2util/Options.c, I2util/I2util/options.h:
	Adding ability for an -option to take variable args after it.

	i.e. owping -sender sendaddr [sendserv]

	In this example 1 or 2 args. To do this - the arg description lists the max
	number of args it will take - and it specifies it as a negative number
	in the description record.

	This library will eventually have to be documented to some extent - I'm
	hoping doxygen is easy...

	jeff

	* configure.ac:
	Adding options to link in I2util from owamp directories.

	jeff

2002-04-26  karp  <karp@foo.local>

	* owamp/api.c: Remove unnneded field-setting functions.

	* owamp/api.c, owamp/rijndael-api-fst.c, owamp/rijndael-api-fst.h:
	Trimmed down rijndael api, keeping only what's necessary.

	* owamp/context.c, owamp/owamp.h, owamp/sprotocol.c:
	Changed OWPAESGetKeyFunc prototype to use OWPByte* key_ret.

	* owampd/owampd.c: Removed send_data and OWPServerOK

	* owamp/random.c: Minor typo corrected.

	* owamp/sprotocol.c:
	Added _OWPSendServerGreeting(), _OWPReadClientGreeting() and _OWPServerOK().

	* owamp/io.c: Started work on block IO.

	* owamp/api.c:
	Broke down OWPControlAccept() into protocol-driven pieces.

2002-04-25  boote  <boote@foo.local>

	* owamp/api.c:
	fix double alloc bug - clean up error handling in client_connect and client_open.

	jeff

	* owamp/rijndael-test-fst.c:
	test code - needs work before it can be added to build process.

	jeff

2002-04-25  karp  <karp@foo.local>

	* owamp/api.c: (Re)moved random_bytes().

	* owamp/Makefile.am: Added random.c to the source files list.

	* owamp/random.c: Initial import.

2002-04-25  boote  <boote@foo.local>

	* Makefile.am, bootstrap, configure.ac:
	Added support to build sub-package I2util.

	jeff

2002-04-25  karp  <karp@foo.local>

	* owamp/sprotocol.c: Initial import.

	* owamp/owamp.h: Removed OWPKey

	* owamp/api.c: Added prototype for random_bytes()

	* owampd/owampd.c, owamp/api.c:
	Moved random_bytes from owampd.c to api.c

	* owampd/owampd.c:
	Fake commit - botched putting proper log message for the last one.
	In the last one: got rid of doit() and started breaking up its
	code into OWP* functions. Re-did main() to make more consistent
	use of these functions.

	* owampd/owampd.c: *** empty log message ***

	* owamp/owampP.h: Got rid of OWPKey.

	* owamp/owamp.h: Fixed prototype for OWPControlAccept().

	* owamp/context.c: Got rid of OWPKey.

	* owamp/api.c:
	Replaced OWPKey by OWPByte[16] everywhere. Started redoing OWPControlAccept() -
	not finished yet. Added OWPAddrCheck().

	* owamp/Makefile.am: Added sprotocol.c to the sources list.

2002-04-24  boote  <boote@foo.local>

	* I2util/I2util/ErrLog.c, I2util/I2util/ErrLogSyslog.c, I2util/I2util/Makefile.am, I2util/I2util/Pthread.h, I2util/I2util/mach_dep.c, I2util/I2util/mach_dep.h, I2util/I2util/options.h, I2util/I2util/util.h, I2util/Makefile.am, I2util/bootstrap, I2util/config/Make-rules, I2util/configure.ac:
	Build for libI2util.a

	jeff

	* I2util/I2util/mach_dep.c: Adding mach dep code.

	jeff

2002-04-24  karp  <karp@foo.local>

	* owampd/owampd.c:
	Removed a lot server code to be placed in OWPControlAccept.

	* owamp/owamp.h: Added prototype for OWPControlAccept().

	* owamp/api.c: Started work on OWPControlAccept().

2002-04-23  boote  <boote@foo.local>

	* I2util/README:
	Beginnings of a utility library. I don't have build files for it yet - tomorrow.

	jeff

	* I2util/I2util/ErrLog.c, I2util/I2util/ErrLogImmediate.c, I2util/I2util/ErrLogSyslog.c, I2util/I2util/Options.c, I2util/I2util/Pthread.c, I2util/I2util/Pthread.h, I2util/I2util/errlog.h, I2util/I2util/errlogimmediate.h, I2util/I2util/errlogsyslog.h, I2util/I2util/options.h, I2util/I2util/optionsP.h, I2util/I2util/util.h:
	import of until library.

	Based on a utility library distributed with the "volsh" code from UCAR.

		http://www.scd.ucar.edu/vets/vg/Software/volsh

	I have used this in the past - and it seemed silly not to use it since it
	is freely distributed.

	jeff

	* owamp/Makefile.am, owamp/api.c, owamp/owamp.h, owamp/owampP.h, owping/Makefile.am:
	This version compiles.

	jeff

	* owamp/Makefile.am, owamp/api.c, owamp/cprotocol.c, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c, owamp/rijndael-alg-fst.c, owamp/rijndael-api-fst.c:
	check-point files: COMPILE NOT TESTED YET - don't update to these.

	jeff

2002-04-23  karp  <karp@foo.local>

	* owamp/access.h.in, owampd/owampd.c:
	Some clean-up - pass hash and Context pointers as function arguments.

	* owampd/owampd.c: Largely finished Control connection set-up.

	* owamp/api.c:
	Added function to set writeIV, readIV and session_key in OWPControl.

	* owamp/owampP.h:
	Changed writeIV, readIV, challenge and session_key types to unsigned char.

	* owamp/Makefile.am: Added io.c

2002-04-22  karp  <karp@foo.local>

	* owamp/owampP.h:
	Changed readIV/writeIV types for smooth interaction with rijndael API.

2002-04-22  boote  <boote@foo.local>

	* owamp/owampP.h: Modified fields.

	jeff

2002-04-22  karp  <karp@foo.local>

	* owampd/owampd.c: Moved readn() and writen() to owamp/io.c

	* owamp/io.c: Initial import.

2002-04-20  karp  <karp@foo.local>

	* owampd/owampd.c: Completely re-did printing out of hash tables.

	* owping/owping.c: Initial import. Trivial main().

	* owping/Makefile.am: Added owping.c to the list of source files.

2002-04-19  karp  <karp@foo.local>

	* owampd/owampd.c: Updated to use home-made hash instead of ndbm.

	* owamp/access.h.in: Changed to use home-made hash instead of ndbm.

2002-04-18  boote  <boote@foo.local>

	* owamp/Makefile.am: Adding rijndael functions into libowamp.a

	jeff

	* configure.ac, owamp/owampP.h:
	Adding checks into the code for problems found at "configure" time.

	jeff

2002-04-17  boote  <boote@foo.local>

	* owamp/Makefile.am:
	moved test-hash back to contrib where it should have been.

	jeff

	* owampd/Makefile.am: Errg - sometime cvs is annoying.

	jeff

	* Makefile.am, README, bootstrap, configure.ac, design/decisions, owamp/Makefile.am, owping/Makefile.am:
	first cut and using gnu autobuild tools.

	jeff

2002-04-17  karp  <karp@foo.local>

	* owampd/owampd.c: Updated to use ../owamp instead of ../libowamp.

	* owamp/access.h.in:
	Now that we have owamp.h don't need home-made defines anymore.

	* owampd/owampd.c: Initial import.

2002-04-16  karp  <karp@foo.local>

	* owamp/access.h.in:
	Added syslog support, changed field name in owamp_limits

	* owamp/api.c:
	Commented out a few little bits and added two stubs to make compile.

2002-04-16  boote  <boote@foo.local>

	* owamp/owamp.h: Fix func pointers.

	jeff

2002-04-15  karp  <karp@foo.local>

	* Doxyfile: Changed EXTRACT_ALL to NO.

	* Doxyfile: Exclude test patterns. Separate sources from comments.

	* Doxyfile: Initial import.

	* owamp/owamp.h: Included <sys/time.h> and <sys/param.h>

2002-04-15  boote  <boote@foo.local>

	* owamp/api.c, owamp/context.c, owamp/error.c, owamp/owamp.h, owamp/owampP.h, owamp/protocol.c:
	check-point - this at least compiles.

	jeff

2002-04-15  karp  <karp@foo.local>

	* owamp/table.128: Initial import.

	* owamp/rijndael-alg-fst.c, owamp/rijndael-alg-fst.h, owamp/rijndael-api-fst.c, owamp/rijndael-api-fst.h:
	Initial import for rijndael.

2002-04-14  karp  <karp@foo.local>

	* owamp/access.h.in: Major rewrite.

2002-04-12  boote  <boote@foo.local>

	* owamp/api.c, owamp/context.c, owamp/owamp.h, owamp/protocol.c:
	check-point.

	jeff

	* owamp/owampP.h: Add a few new fields...

	jeff

2002-04-04  boote  <boote@foo.local>

	* owamp/api.c, owamp/owamp.h, owamp/owampP.h:
	Not completely consistant at the moment - but I wanted to check-in anyway since
	I won't be able to look at this for a few days.

	jeff

2002-04-01  boote  <boote@foo.local>

	* owamp/api.c, owamp/error.c, owamp/owamp.h, owamp/owampP.h:
	just checking in for backup purposes.

	jeff

2002-03-31  karp  <karp@foo.local>

	* owamp/access.h.in: Added dbm, open, and assert support

	* owamp/access.h.in: Added fcntl header file.

2002-03-30  karp  <karp@foo.local>

	* owamp/access.h.in: Initial import

2002-03-28  boote  <boote@foo.local>

	* owamp/owamp.h: OWAMPKey

	jeff

	* owamp/owampP.h: change copywrite

	jeff

	* owamp/owamp.h, owamp/owampP.h: Next revision...

	jeff

2002-03-22  boote  <boote@foo.local>

	* owamp/owamp.h, owamp/owampP.h: next round.

2002-03-22  karp  <karp@foo.local>

	* owamp/owamp.h:
	Added and clarified some api docs. Corrected name mismatches

2002-03-21  boote  <boote@foo.local>

	* owamp/owampP.h: Command-line vim is working!

	* owamp/owamp.h, owamp/owampP.h: *** empty log message ***

2002-03-20  boote  <boote@foo.local>

	* owamp/owamp.h, owamp/owampP.h: *** empty log message ***

2002-03-19  boote  <boote@foo.local>

	* design/control_flow, design/decisions: Initial design docs.

	* design/api_design, design/usage_scenerios:
	Adding initial design docs to owamp.

	jeff

