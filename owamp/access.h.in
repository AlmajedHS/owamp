/*
 * $Id$
 */
#ifndef	_owamp_contrib_h_
#define	_owamp_contrib_h_
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>
#include <limits.h>
#include <math.h>
#include <fcntl.h>
#include <sys/stat.h>
#include <assert.h>
#include <netdb.h>
#include <errno.h>
#include <sys/wait.h>
#include <syslog.h>
#include <stdarg.h>

/* for inet_pton */
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>

/* for ntohl */
#include <sys/param.h>

#include <I2util/table.h>
#include <owamp/owamp.h>

#ifndef	OWP_PREFIX
#define	OWP_PREFIX	/usr/local
#endif

#undef	AUTOCONF_SYSCONFDIR
#define	MSTRCAT(A,B)		#A ## #B
#define	MSTRCATEXPAND(A,B)	MSTRCAT(A,B)
#define	OWP_CONFDIR		MSTRCATEXPAND(OWP_PREFIX,AUTOCONF_SYSCONFDIR)

#define MAX_LINE 1024

#ifndef MAXPATHLEN
#define MAXPATHLEN 1024
#endif


#define OWP_DEFAULT_OPEN_CLASS "open"
#define OWP_AUTH_CLASS "authenticated"
#define OWP_BANNED_CLASS "banned"

#define KID_LEN 16
#define PASSWD_LEN 16
#define PASSWD_LEN_HEX (PASSWD_LEN * 2)

/*
** This structure is used to keep track of usage resources.
*/

typedef struct owamp_limits {
	u_int32_t bandwidth;   /* bytes/sec                          */
	u_int32_t space;       /* bytes                              */
	u_int8_t test_sessions; /* number of concurrent test sessions */
} OWAMPLimits;

typedef struct {
	I2table ip2class;
	I2table class2limits;
	I2table passwd;
} policy_data;

extern char *ipaddr2class(u_int32_t ip, I2table ip2class_hash);
extern void print_ip2class_binding(const struct I2binding *p, FILE* fp);
extern void print_class2limits_binding(const struct I2binding *p, FILE* fp);

/*
 * Tolya: Shouldn't a prototype go here for this?
 *  - if not just remove it - but I needed the prototype to try and use it,
 *  and it didn't make sense to put it in the .c file - it is used from
 *  more than one place.
 */
extern policy_data
*PolicyInit(
	OWPContext	ctx,
	char		*ip2class_file,
	char		*class2limits_file,
	char		*passwd_file,
	OWPErrSeverity	*err_ret
);

#endif	/* _owamp_contrib_h_ */
